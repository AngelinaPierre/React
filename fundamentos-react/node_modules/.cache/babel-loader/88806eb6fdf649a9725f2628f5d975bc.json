{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PEREIRAG\\\\Documents\\\\ANGELINA\\\\REACT\\\\curso-react\\\\fundamentos-react\\\\src\\\\components\\\\condicional\\\\UsuarioInfo.js\";\n\n/*eslint-disable import/no-anonymous-default-export */\n//IMPORT REACT\nimport React from 'react';\nimport If from './If';\n/***\r\n * AULA 31 - RENDERIZAÇÃO CONDICIONAL #02\r\n * \r\n * Vamos fazer um COMPONENTE para nos ajudar na renderização condicional\r\n * \r\n * Aula passada fizemos uma renderização condicional usando um OPERADOR TERNARIO. Agora iremos criar um componente e a partir dele conseguirmos renderizar um trecho .jsx ou não.\r\n * \r\n * Vamos criar um arquivo em /condicional>If.js ou js tanto faz\r\n * \r\n * FORMA 1 \r\n * \r\n * Inicialmente vamos criar um componente funcional simples.\r\n * \r\n * A ideia é criar um componente com uma propriedade chamada teste, e nessa proprriedade teramos uma expressão que pode ser verdadeira ou falsa.\r\n * [Verdadeira] -> Conteudo de <span> será exibido.\r\n * [Falsa] -> Nada será renderizado\r\n *      <If test={expressão}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n *      <If test={aluno.nota >= 7}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n * \r\n * [props.children] -> Selecionar os elementos que foram passados no corpo de um componente.\r\n *  Retorno do if(props.test)\r\n *      <span>...</span>\r\n *      <span>...</span>\r\n *      <span>...</span> \r\n * \r\n * Vamos criar outro componente chamado UsuarioInfo.js para testar nosso compoennte if...\r\n * \r\n * FORMA 1\r\n * \r\n * Caso nao tenha usuario vamos mostrar outra coisa\r\n * \r\n * 1) Importa componente dentro de [App.jsx]\r\n * 2) Vamos apssa a propriedade usuario, lebrando que o primeiro par de {} é para termos um trecho que será interpretado em JS, e o segundo é oara indicar que queremos criar um objeto que representa um usuario.\r\n * 3) apos modificação, em usuarioInfo.jsx vamos colocar o {props}para acessar.... \r\n * \r\n * FORMA 2\r\n * \r\n * [OBS] -> Podemos nos precaver caso tentem acessar um objeto que nao existe ou caso nao digitem nada.\r\n *      No lugar das {} podemos tbm colocar um valor padrão para impedir o acesso...\r\n * \r\n * FORMA 3 - importando o componente <If>\r\n * \r\n * 1) importar o componente e envolver na resposta aplicando o teste\r\n * 2) [teste] recebe se usuario estiver setado e usuario.nome for valido;\r\n *      teste={usuario && usuario.nome}\r\n *  2.1) usuario.nome != de NULL ou VAZIO {}\r\n * \r\n * \r\n */\n//FORMA 3\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const usuario = props.usuario || {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(If, {\n      teste: usuario && usuario.nome,\n      children: [\"Seja bem-vinda(o) \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: usuario.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 35\n      }, this), \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}); //FORMA 2\n// export default props => {\n//     const usuario = props.usuario || {}\n//     return (\n//         <div>\n//             Seja bem-vinda(o) <strong>{usuario.nome}</strong>!\n//         </div>\n//     )\n// }\n//FORMA 1\n// export default props => {\n//     return (\n//         <div>\n//             Seja bem vindo <strong>{props.usuario.nome}</strong>!\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/fundamentos-react/src/components/condicional/UsuarioInfo.js"],"names":["React","If","props","usuario","nome"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,MAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAeC,KAAK,IAAI;AACpB,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,IAAiB,EAAjC;AACA,sBACI;AAAA,2BACI,QAAC,EAAD;AAAI,MAAA,KAAK,EAAEA,OAAO,IAAIA,OAAO,CAACC,IAA9B;AAAA,oDACsB;AAAA,kBAASD,OAAO,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD,E,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*eslint-disable import/no-anonymous-default-export */\r\n//IMPORT REACT\r\nimport React from 'react'\r\nimport If from './If'\r\n\r\n\r\n/***\r\n * AULA 31 - RENDERIZAÇÃO CONDICIONAL #02\r\n * \r\n * Vamos fazer um COMPONENTE para nos ajudar na renderização condicional\r\n * \r\n * Aula passada fizemos uma renderização condicional usando um OPERADOR TERNARIO. Agora iremos criar um componente e a partir dele conseguirmos renderizar um trecho .jsx ou não.\r\n * \r\n * Vamos criar um arquivo em /condicional>If.js ou js tanto faz\r\n * \r\n * FORMA 1 \r\n * \r\n * Inicialmente vamos criar um componente funcional simples.\r\n * \r\n * A ideia é criar um componente com uma propriedade chamada teste, e nessa proprriedade teramos uma expressão que pode ser verdadeira ou falsa.\r\n * [Verdadeira] -> Conteudo de <span> será exibido.\r\n * [Falsa] -> Nada será renderizado\r\n *      <If test={expressão}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n *      <If test={aluno.nota >= 7}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n * \r\n * [props.children] -> Selecionar os elementos que foram passados no corpo de um componente.\r\n *  Retorno do if(props.test)\r\n *      <span>...</span>\r\n *      <span>...</span>\r\n *      <span>...</span> \r\n * \r\n * Vamos criar outro componente chamado UsuarioInfo.js para testar nosso compoennte if...\r\n * \r\n * FORMA 1\r\n * \r\n * Caso nao tenha usuario vamos mostrar outra coisa\r\n * \r\n * 1) Importa componente dentro de [App.jsx]\r\n * 2) Vamos apssa a propriedade usuario, lebrando que o primeiro par de {} é para termos um trecho que será interpretado em JS, e o segundo é oara indicar que queremos criar um objeto que representa um usuario.\r\n * 3) apos modificação, em usuarioInfo.jsx vamos colocar o {props}para acessar.... \r\n * \r\n * FORMA 2\r\n * \r\n * [OBS] -> Podemos nos precaver caso tentem acessar um objeto que nao existe ou caso nao digitem nada.\r\n *      No lugar das {} podemos tbm colocar um valor padrão para impedir o acesso...\r\n * \r\n * FORMA 3 - importando o componente <If>\r\n * \r\n * 1) importar o componente e envolver na resposta aplicando o teste\r\n * 2) [teste] recebe se usuario estiver setado e usuario.nome for valido;\r\n *      teste={usuario && usuario.nome}\r\n *  2.1) usuario.nome != de NULL ou VAZIO {}\r\n * \r\n * \r\n */\r\n//FORMA 3\r\nexport default props => {\r\n    const usuario = props.usuario || {}\r\n    return (\r\n        <div>\r\n            <If teste={usuario && usuario.nome}>\r\n                Seja bem-vinda(o) <strong>{usuario.nome}</strong>!\r\n            </If>\r\n        </div>\r\n    )\r\n}\r\n\r\n//FORMA 2\r\n// export default props => {\r\n//     const usuario = props.usuario || {}\r\n//     return (\r\n//         <div>\r\n//             Seja bem-vinda(o) <strong>{usuario.nome}</strong>!\r\n//         </div>\r\n//     )\r\n// }\r\n//FORMA 1\r\n// export default props => {\r\n//     return (\r\n//         <div>\r\n//             Seja bem vindo <strong>{props.usuario.nome}</strong>!\r\n//         </div>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}