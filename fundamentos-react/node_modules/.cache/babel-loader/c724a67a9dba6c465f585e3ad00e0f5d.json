{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PEREIRAG\\\\Documents\\\\ANGELINA\\\\REACT\\\\curso-react\\\\fundamentos-react\\\\src\\\\components\\\\comunicacao\\\\IndiretaPai.jsx\";\n\n/* eslint-disable import/no-anonymous-default-export */\n//IMPORT REACT\nimport React from 'react'; //IMPORT COMPONENTES\n\nimport IndiretaFilho from './IndiretaFilho';\n/**\r\n * AULA 34 - COMUNICAÇÃO INDIRETA\r\n * \r\n * Quando precisamos passar informações do componente filho para o componente pai.\r\n * \r\n * O componente filho não possui uma referencia direta para o componente pai, logo não temos como via propriedade instanciar um componente pai, pq assim o pai passaria a ser o filho e o filho passaria a ser o pai.\r\n * \r\n * Vamos demonstrar isso com 2 exemplos, um pelo console e na px aula, vamos criar um compoente com estado.\r\n * \r\n * Ja que não vamos trabalhar com prorpriedade vamos trabalhar com o estado do componente\r\n * \r\n * Vamos criar 2 arquivos /comunicacao/IndiretaPai.jsx /comunicacao/IndiretaFilho.jsx\r\n * \r\n * FORMA 1\r\n * \r\n * Vamos supor que dentro do IndiretaPai.jsx queremo colocar algumas informações[nome/idade/nerd] -> so quem ira informar/dar valor a essas infomrações é o filho..\r\n * \r\n * VAmos fazer um componente contador onde teremos que quebrar ele depois,...\r\n * \r\n * 1) criamso um card em aap.jsx para o IndiretaPai.\r\n * 2) Em IndiretaFilho.jsx vamos colocar o nome [filho] dentro de uma <div> e logo abaixo vamos criar um <bottom> para fornecer informações. OU seja, dentro do componente filho quando clicarmos no botão o componente filho ira fornecer informações para o componente pai.\r\n * \r\n * //FORMA 2\r\n * Então como é feita a comunicação do componente filho para o pai? Ja que o componente filho não possui comunicação direta com o pai. (pai t em com o filho)\r\n * \r\n *      - Passamos uma função via props... ou seja, passamos uma função do pai pro filho, e quando acontecer algum tipo de evento no filho as informações são passadas para o pai.\r\n * \r\n */\n// FORMA 2\n// FORMA 1\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pai\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IndiretaFilho, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/fundamentos-react/src/components/comunicacao/IndiretaPai.jsx"],"names":["React","IndiretaFilho","props"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAeC,KAAK,IAAI;AACpB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n//IMPORT REACT\r\nimport React from 'react'\r\n//IMPORT COMPONENTES\r\nimport IndiretaFilho from './IndiretaFilho'\r\n\r\n/**\r\n * AULA 34 - COMUNICAÇÃO INDIRETA\r\n * \r\n * Quando precisamos passar informações do componente filho para o componente pai.\r\n * \r\n * O componente filho não possui uma referencia direta para o componente pai, logo não temos como via propriedade instanciar um componente pai, pq assim o pai passaria a ser o filho e o filho passaria a ser o pai.\r\n * \r\n * Vamos demonstrar isso com 2 exemplos, um pelo console e na px aula, vamos criar um compoente com estado.\r\n * \r\n * Ja que não vamos trabalhar com prorpriedade vamos trabalhar com o estado do componente\r\n * \r\n * Vamos criar 2 arquivos /comunicacao/IndiretaPai.jsx /comunicacao/IndiretaFilho.jsx\r\n * \r\n * FORMA 1\r\n * \r\n * Vamos supor que dentro do IndiretaPai.jsx queremo colocar algumas informações[nome/idade/nerd] -> so quem ira informar/dar valor a essas infomrações é o filho..\r\n * \r\n * VAmos fazer um componente contador onde teremos que quebrar ele depois,...\r\n * \r\n * 1) criamso um card em aap.jsx para o IndiretaPai.\r\n * 2) Em IndiretaFilho.jsx vamos colocar o nome [filho] dentro de uma <div> e logo abaixo vamos criar um <bottom> para fornecer informações. OU seja, dentro do componente filho quando clicarmos no botão o componente filho ira fornecer informações para o componente pai.\r\n * \r\n * //FORMA 2\r\n * Então como é feita a comunicação do componente filho para o pai? Ja que o componente filho não possui comunicação direta com o pai. (pai t em com o filho)\r\n * \r\n *      - Passamos uma função via props... ou seja, passamos uma função do pai pro filho, e quando acontecer algum tipo de evento no filho as informações são passadas para o pai.\r\n * \r\n */\r\n// FORMA 2\r\n// FORMA 1\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <div>Pai</div>\r\n            <IndiretaFilho />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}