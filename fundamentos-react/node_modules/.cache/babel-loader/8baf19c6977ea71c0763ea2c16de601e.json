{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PEREIRAG\\\\Documents\\\\ANGELINA\\\\REACT\\\\curso-react\\\\fundamentos-react\\\\src\\\\components\\\\layout\\\\Card.jsx\";\n\n/* eslint-disable import/no-anonymous-default-export */\n\n/**\r\n * AULA 22 - COMPONENTE CARD #1\r\n * \r\n * /////////////////////////// FORMA 1 ///////////////////////////\r\n *  vamos querer criar uma classe css para esse componente, logo vamos criar um arquivo chamado Card.css na mesma pasta.\r\n * e importar o css para esse file.\r\n * \r\n * class -> não eh um atributo usado no react e sim do html\r\n * classname -> usando no react. -> funciona usando [class] mas eh melhor usar a convenção;\r\n * \r\n * Mudando a fonte do card, vamos nos google fonts e pegamos o link que será referenciado dentro do HTML.\r\n * \r\n * <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n<link href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n * \r\n * Depois de colocar a referencia da fonte no .html no index.css vamos colocar a font-family oswald\r\n * \r\n * /////////////////////////// FORMA 2 ///////////////////////////\r\n * \r\n * FORMA 2 - A pergunta é como podemos passar para o nosso conteudo, em vez de colocar um fixo, passar outros elementos.\r\n * \r\n * No app.js queremos criar um card chamado desafio aleatorio e queremos passar o componente [aleatorio] para dentro do card.\r\n * \r\n * Perceba que em App.jsx quando passamos os <aleatorio> para dentro do <card> somente o conteudo do card esta sendo mostrado, e não o resultado da função <aleatorio< que criamos\r\n * \r\n * #### ACESSANDO FUNÇÃO DENTRO DE FUNÇÃO [props.children]\r\n * \r\n * \r\n */\nimport React from 'react';\nimport './Card.css'; // FORMA 2\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const title = props.title;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ClassName: \"Card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}); // FORMA 1\n// export default props => {\n//     return (\n//         <div className=\"Card\">\n//             <div className=\"Title\">{props.titulo}</div>\n//             <div className=\"Content\">Conteudo</div>\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/fundamentos-react/src/components/layout/Card.jsx"],"names":["React","props","title"],"mappings":";;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP,C,CAGA;;;AACA,gBAAeC,KAAK,IAAI;AACpB,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAPD,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n/**\r\n * AULA 22 - COMPONENTE CARD #1\r\n * \r\n * /////////////////////////// FORMA 1 ///////////////////////////\r\n *  vamos querer criar uma classe css para esse componente, logo vamos criar um arquivo chamado Card.css na mesma pasta.\r\n * e importar o css para esse file.\r\n * \r\n * class -> não eh um atributo usado no react e sim do html\r\n * classname -> usando no react. -> funciona usando [class] mas eh melhor usar a convenção;\r\n * \r\n * Mudando a fonte do card, vamos nos google fonts e pegamos o link que será referenciado dentro do HTML.\r\n * \r\n * <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n<link href=\"https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n * \r\n * Depois de colocar a referencia da fonte no .html no index.css vamos colocar a font-family oswald\r\n * \r\n * /////////////////////////// FORMA 2 ///////////////////////////\r\n * \r\n * FORMA 2 - A pergunta é como podemos passar para o nosso conteudo, em vez de colocar um fixo, passar outros elementos.\r\n * \r\n * No app.js queremos criar um card chamado desafio aleatorio e queremos passar o componente [aleatorio] para dentro do card.\r\n * \r\n * Perceba que em App.jsx quando passamos os <aleatorio> para dentro do <card> somente o conteudo do card esta sendo mostrado, e não o resultado da função <aleatorio< que criamos\r\n * \r\n * #### ACESSANDO FUNÇÃO DENTRO DE FUNÇÃO [props.children]\r\n * \r\n * \r\n */\r\n\r\nimport React from 'react'\r\nimport './Card.css'\r\n\r\n\r\n// FORMA 2\r\nexport default props => {\r\n    const title = props.title\r\n    return (\r\n        <div ClassName=\"Card\">\r\n            <div className=\"Title\">{title}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// FORMA 1\r\n// export default props => {\r\n//     return (\r\n//         <div className=\"Card\">\r\n//             <div className=\"Title\">{props.titulo}</div>\r\n//             <div className=\"Content\">Conteudo</div>\r\n//         </div>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}