{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PEREIRAG\\\\Documents\\\\ANGELINA\\\\REACT\\\\curso-react\\\\fundamentos-react\\\\src\\\\App.jsx\";\n\n/* eslint-disable import/no-anonymous-default-export */\n// import react\nimport React from 'react'; // import layout\n\nimport './App.css'; // import compomnentes\n\nimport Primeiro from './components/basicos/Primeiro';\nimport ComParametro from './components/basicos/ComParametro';\nimport Fragmento from './components/basicos/Fragmento';\nimport Aleatorio from './components/basicos/Aleatorio';\nimport Card from './components/layout/Card';\nimport Familia from './components/basicos/Familia';\nimport FamiliaMembro from './components/basicos/FamiliaMembro';\nimport ListaAlunos from './components/repeticao/ListaAlunos';\nimport TabelaProdutos from './components/repeticao/TabelaProdutos';\nimport ParOuImpar from './components/condicional/ParOuImpar';\nimport UsuarioInfo from './components/condicional/UsuarioInfo';\nimport DiretaPai from \"./components/comunicacao/DiretaPai\";\n/**\r\n * AULA 34 - COMUNICAÇÃO INDIRETA\r\n * \r\n * Quando precisamos passar informações do componente filho para o componente pai.\r\n * \r\n * O componente filho não possui uma referencia direta para o componente pai, logo não temos como via propriedade instanciar um componente pai, pq assim o pai passaria a ser o filho e o filho passaria a ser o pai.\r\n * \r\n * Vamos demonstrar isso com 2 exemplos, um pelo console e na px aula, vamos criar um compoente com estado.\r\n * \r\n */\n\n/**\r\n * AULA 33 - COMUNICAÇÃO DIRETA\r\n * \r\n * A nossa aplicação é uma arvore de componentes, temos o componente [app] que ira representar o conteudo da aplicação dentro desse componente de conteudo vamos ter um titulo, alem do titulo podemos ter uma tabela, e ddentro dessa tabela uma thead.\r\n * \r\n * Voce pode quebrar sua aplicação em multiplos componentes sempre visando o re-uso e a organização;\r\n * \r\n * Se temos um componente que precisa ser re-usado, voce coloca ele num trecho e re-usa ele.\r\n * \r\n * Se voce tem um componente que nao precisa ser re-usadoi mas ele eh muito grande, podemos quebrar ele em partes para manter assim a organização.\r\n * \r\n * Dentro dessa arvore de componentes é muito comum termo a COMUNICAÇÃO DIRETA e a COMUNICAÇÃO INDIRETA.\r\n * \r\n * // FORMA 1 -> COMUNICAÇÃO DIRETA\r\n * \r\n * Vamos mostrar que a comunicação direta é feita atraves das props...\r\n * \r\n * Vamos criar um novo componente para isso.. /comunicacao/DiretaPai.jsx\r\n *                                           /comunicacao/DiretaFilho.jsx\r\n * 1) Dentro do filho vamos supor que queremos receber algumas informações...\r\n *      - Vamos ter uma PROPRIEDADE TEXTUAL\r\n *      - Vamos ter uma PROPRIEDADE NUMERICA\r\n *      - Vamos ter uma PROPRIEDADE BOOLEANA.\r\n * 2) A comunicação de um componente pai para um filho é feita passando via [props]/ propriedades o que quremos passar do pai pro filho..\r\n * 3) À uma relação direta pois dentro do pai temos uma referencia para o componente filho.\r\n *      - DiretaPai.jsx > import DiretaFilho from './'\r\n * 4) Agora temos de forma literal uma definição de um componente <DiretaFilho> de tal forma que conseguimos agora passar um texto, um numero, e um valor booleano.\r\n * 5) O valor booleano no filho pode ser transformado em texto, [VERDADEIRO|FALSO]\r\n * 6) Dessa forma podemos ir agora no App.jsx e criar um novo card para a comunicação direta.\r\n * \r\n * FORMA 2\r\n * 1) Em vez de termos um <div> vamos trocar por <span>\r\n * 2) Podemos no [DiretaPai.jsx] definir novos filhos...\r\n * \r\n * FORMA 3 - COLOCANDO NOMES MAIS SIGNIFICATIVOS [DiretaPai.jsx e DiretaFilho.jsx]\r\n * \r\n * \r\n * Quando falamos comunicação estamos dizendo, nos referindo a  troca de informações, ou seja, estamos passando informações do componente pai para o filho via propriedades [props.]\r\n * \r\n * Vimos a comunicação direta quandoc riamos o componente <Familia> onde passavamos as prorpeidades de sobrenome e no <FamiliaMembro> passamos o nome dos familiares.\r\n *      Nesse caso usamos a função map para passar as propriedades de <familia> para <FamiliaMembro>\r\n *      {\r\n                props.children.map((child, i) =>{\r\n                    return cloneElement( child, {...props, key: i})\r\n                })\r\n            }\r\n * \r\n * \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (_ => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Fundamentos React 33\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cards\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#09 - COMUNICA\\xC7\\xC3O DIRETA\",\n      color: \"#59323C\",\n      children: /*#__PURE__*/_jsxDEV(DiretaPai, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#08 - RENDERIZA\\xC7\\xC3O CONDICIONAL P2\",\n      color: \"#982365\",\n      children: [/*#__PURE__*/_jsxDEV(UsuarioInfo, {\n        usuario: {\n          nome: 'Angelina'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UsuarioInfo, {\n        usuario: {\n          email: 'Angelina@hotmail.com'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UsuarioInfo, {\n        usuario: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UsuarioInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#08 - RENDERIZA\\xC7\\xC3O CONDICIONAL P1\",\n      color: \"#982395\",\n      children: /*#__PURE__*/_jsxDEV(ParOuImpar, {\n        numero: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#07 - DESAFIO DE REPETI\\xC7\\xC3O\",\n      color: \"#3A9AD9\",\n      children: /*#__PURE__*/_jsxDEV(TabelaProdutos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#06 - REPETI\\xC7\\xC3O\",\n      color: \"#FF4C65\",\n      children: /*#__PURE__*/_jsxDEV(ListaAlunos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#05 - COMPONENTES COM FILHO \",\n      color: \"#00C8F8\",\n      children: /*#__PURE__*/_jsxDEV(Familia, {\n        sobrenome: \"Pierre\",\n        children: [/*#__PURE__*/_jsxDEV(FamiliaMembro, {\n          nome: \"Angelina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FamiliaMembro, {\n          nome: \"Bruno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FamiliaMembro, {\n          nome: \"Santa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#04 - Desafio Aleatorio\",\n      color: \"#FA6900\",\n      children: [/*#__PURE__*/_jsxDEV(Aleatorio, {\n        min: 1,\n        max: 60\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Aleatorio, {\n        min: 100,\n        max: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#03 - Fragmento\",\n      color: \"#E94C6F\",\n      children: /*#__PURE__*/_jsxDEV(Fragmento, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#02 - Com Parametros\",\n      color: \"#E8B71A\",\n      children: [/*#__PURE__*/_jsxDEV(ComParametro, {\n        titulo: \"Situa\\xE7\\xE3o do Aluno\",\n        nome: \"Angelina Pierre\",\n        nota: 9.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ComParametro, {\n        titulo: \"Situa\\xE7\\xE3o do Aluno\",\n        nome: \"Santa Kaya\",\n        nota: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      titulo: \"#01 - Primeiro Componente\",\n      color: \"#588C73\",\n      children: /*#__PURE__*/_jsxDEV(Primeiro, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 85,\n  columnNumber: 5\n}, this));\n/**\r\n * AULA 32 - RENDERIZAÇÃO CONDICIONAL #03\r\n * \r\n * Vamos fazer a renderização com [if|else]\r\n * \r\n * Para funcionar precisaremos fazer algumas alterações:\r\n *  1) if.js > vamos exportar uma constante [else] com um componente funcional que ira retornar um props.children, ira passar propriedades que foram passadas para o componente...\r\n *  2) Como fazemos para importar um compoente que so possui um export....\r\n *      - Estavamos fazendo o export default\r\n *      - No import do If, iremos colocar tbm o import do componente...\r\n                import If, {Else} from './If'\r\n *  3) PERCEBA QUE ESTA APARECENDO AS DUAS CONDIÇÕES, TEREMOS QUE MECHER NO NOSSO IF PARA CONFIGURAR NESSE SENTIDO.\r\n * \r\n * FORMA 1\r\n * \r\n * Nosso componente <IF> possui um componente filho <Else>, para termos acesso a esse componente criamos uma variavel [elseChild] que fara uma filtragem dos filhos desse componente....\r\n    const elseChild = props.children.filter(child)\r\n *      Child => será uma função onde colocaremos a condição.\r\n        se child.type.name for igual a 'Else' teremos o componente [elseChild] que ira retornar um array, mas queremos pegar somente o primeiro [Else] -> para isso  [0]\r\n        const elseChild = props.children.filter(child => {\r\n        return child.type && child.type.name === 'Else'\r\n        })[0]\r\n        \r\n        Caso o primeiro elemento do array nao exista irá retornar um undefined.\r\n * \r\n * 1) vimos no console que o elemento[Else] existe como um objeto, caso não encontre o elemento será tratado como undefined.\r\n * \r\n * // FORMA 2\r\n * \r\n * Não queremos mostrar o Else caso não seja condição dele, para isso temos que criar um if para comprar com o primeiro valor da constante para elseChild que criamos\r\n * \r\n *  1) Agora nesse caso em vez de retornar o props.children vamos retornar o ifCHildren apenas...\r\n * --- Agora vemos que criamos uma estrutura condicional com if/else\r\n *\r\n * FORMA 3 - MOSTRANDO SOMENTE O ELSE CASO SEJA VERDADEIRO....\r\n * \r\n */\n// FORMA 1\n//  export default _ =>\n//  <div className=\"App\">\n//      <h1>Fundamentos React 31</h1>\n//      <div className=\"Cards\">\n//          <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color =\"#982365\">\n//              <UsuarioInfo usuario={{ nome: 'Angelina' }} />\n//              <UsuarioInfo usuario={{ email: 'Angelina@hotmail.com' }} />\n//              <UsuarioInfo usuario={{}} />\n//              <UsuarioInfo />\n//          </Card>\n//          <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\n//              <ParOuImpar numero={20}></ParOuImpar>\n//          </Card>\n//          <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\n//              <TabelaProdutos />\n//          </Card>\n//          <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\n//              <ListaAlunos />\n//          </Card>\n//          <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\n//              <Familia sobrenome=\"Pierre\">\n//                  <FamiliaMembro nome=\"Angelina\" />\n//                  <FamiliaMembro nome=\"Bruno\" />\n//                  <FamiliaMembro nome=\"Santa\" />\n//              </Familia>\n//          </Card>\n//          <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//              <Aleatorio min={1} max={60} />\n//              <Aleatorio min={100} max={200} />\n//          </Card>\n//          <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//              <Fragmento />\n//          </Card>\n//          <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\n//              <ComParametro\n//                  titulo=\"Situação do Aluno\"\n//                  nome=\"Angelina Pierre\"\n//                  nota={9.3}\n//              />\n//              <ComParametro\n//                  titulo=\"Situação do Aluno\"\n//                  nome=\"Santa Kaya\"\n//                  nota={0.3}\n//              />\n//              </Card>\n//              <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                  <Primeiro />\n//              </Card>\n//      </div>\n//  </div>\n\n/***\r\n * AULA 31 - RENDERIZAÇÃO CONDICIONAL #02\r\n * \r\n * Vamos fazer um COMPONENTE para nos ajudar na renderização condicional\r\n * \r\n * Aula passada fizemos uma renderização condicional usando um OPERADOR TERNARIO. Agora iremos criar um componente e a partir dele conseguirmos renderizar um trecho .jsx ou não.\r\n * \r\n * Vamos criar um arquivo em /condicional>If.js ou js tanto faz\r\n * \r\n * FORMA 1 \r\n * \r\n * Inicialmente vamos criar um componente funcional simples.\r\n * \r\n * A ideia é criar um componente com uma propriedade chamada teste, e nessa proprriedade teramos uma expressão que pode ser verdadeira ou falsa.\r\n * [Verdadeira] -> Conteudo de <span> será exibido.\r\n * [Falsa] -> Nada será renderizado\r\n *      <If test={expressão}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n *      <If test={aluno.nota >= 7}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n * \r\n * [props.children] -> Selecionar os elementos que foram passados no corpo de um componente.\r\n *  Retorno do if(props.test)\r\n *      <span>...</span>\r\n *      <span>...</span>\r\n *      <span>...</span> \r\n * \r\n * Vamos criar outro componente chamado UsuarioInfo.js para testar nosso compoennte if...\r\n * \r\n * FORMA 1\r\n * \r\n * Caso nao tenha usuario vamos mostrar outra coisa\r\n * \r\n * 1) Importa componente dentro de [App.jsx]\r\n * 2) Vamos apssa a propriedade usuario, lebrando que o primeiro par de {} é para termos um trecho que será interpretado em JS, e o segundo é oara indicar que queremos criar um objeto que representa um usuario.\r\n * 3) apos modificação, em usuarioInfo.jsx vamos colocar o {props}para acessar.... \r\n * \r\n * FORMA 1\r\n * \r\n * [OBS] -> Podemos nos precaver caso tentem acessar um objeto que nao existe ou caso nao digitem nada.\r\n *      No lugar das {} podemos tbm colocar um valor padrão para impedir o acesso...\r\n * \r\n * FORMA 2 - importando o componente <If>\r\n * \r\n * 1) importar o componente e envolver na resposta aplicando o teste\r\n * 2) [teste] recebe se usuario estiver setado e usuario.nome for valido;\r\n *      test={usuario && usuario.nome}\r\n *  2.1) usuario.nome != de NULL ou VAZIO {}\r\n * \r\n * 3) vamos em App.js criar um novo usuario com email emv ez de nome\r\n * \r\n * FORMA 4\r\n * 1) Para caso a propriedade usuario não exista, escolhemos o que será exibido em tela.\r\n * \r\n */\n//FORMA 2\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 31</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color =\"#982365\">\n//                 <UsuarioInfo usuario={{ nome: 'Angelina' }} />\n//                 <UsuarioInfo usuario={{ email: 'Angelina@hotmail.com' }} />\n//                 <UsuarioInfo usuario={{}} />\n//                 <UsuarioInfo />\n//             </Card>\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\n//                 <ParOuImpar numero={20}></ParOuImpar>\n//             </Card>\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\n//                 <TabelaProdutos />\n//             </Card>\n//             <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\n//                 <ListaAlunos />\n//             </Card>\n//             <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\">\n//                     <FamiliaMembro nome=\"Angelina\" />\n//                     <FamiliaMembro nome=\"Bruno\" />\n//                     <FamiliaMembro nome=\"Santa\" />\n//                 </Familia>\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//                 </Card>\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                     <Primeiro />\n//                 </Card>\n//         </div>\n//     </div>\n// //FORMA 1\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 31</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color =\"#982365\">\n//                 <UsuarioInfo usuario={{ nome: 'Angelina' }} />\n//             </Card>\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\n//                 <ParOuImpar numero={20}></ParOuImpar>\n//             </Card>\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\n//                 <TabelaProdutos />\n//             </Card>\n//             <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\n//                 <ListaAlunos />\n//             </Card>\n//             <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\">\n//                     <FamiliaMembro nome=\"Angelina\" />\n//                     <FamiliaMembro nome=\"Bruno\" />\n//                     <FamiliaMembro nome=\"Santa\" />\n//                 </Familia>\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//                 </Card>\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                     <Primeiro />\n//                 </Card>\n//         </div>\n//     </div>\n\n/**\r\n * AULA 30 - RENDERIZAÇÃO CONDICIONAL #01\r\n * \r\n * Vamos criar uma nova pasta chamada /condicional e criar um arquivo .jsx chamado ParOuImpar.jsx.\r\n * O mesmo principio utilizado no .css de condição iremos utilizar aqui.\r\n *       <tr key={produto.id} className={i % 2 === 0 ? 'Par' : 'Impar'}>\r\n                    <td>{produto.id}</td>\r\n                    <td>{produto.nome}</td>\r\n                    <td>{produto.preco.toFixed(2).replace('.',',')}</td>\r\n                </tr>\r\n * \r\n * Vamos passar um numero como parametro e queremos que msotre se o numero eh par ou impar de acordo com o valor passado\r\n * \r\n * FORMA 1 - A ideia é,vamos receber um numero a partir as propriedades (props), e queremos saber quando vamos exibir que determinado numero é par ou impar baseado em uma renderização condicional.\r\n * 1) inserir o componente dentro de app.jsx(import)\r\n * 2) vamos pegar o componente criado e colocar dentro de um <card> em app.jsx\r\n * 3) colocar a propriedade numero no formato de numero mesmo kkkkkk\r\n                <ParOuImpar numero={20}></ParOuImpar>\r\n * \r\n * FORMA 2\r\n * 1) No componente, o que precisamos saber? temos um numero e queremos saber se ele é par ou impar...\r\n *  1.1) Podemos calcular isso:\r\n        const isPar = props.numero % 2 === 0 \r\n *      Ou seja com essa variavel ou expressão podemos calcular\r\n    1.2) Com essa variavel ou expressão podemos usar um codigo JS na <div> dentro de {chaves}, criando uma OPERATAÇÃO TERNÁRIA (3 valores), onde caso seja par irá mostrar o trecho jsx <span>Par</span> caso contrario <span>Ímpar</span>\r\n *\r\n *\r\n * Na proxima aula vamos criar uma componente [if?] que será usado para fazer a renderização condicional.\r\n * \r\n * \r\n */\n// FORMA 1\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 28</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\n//                 <ParOuImpar numero={20}></ParOuImpar>\n//             </Card>\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\n//                 <TabelaProdutos />\n//             </Card>\n//             <Card titulo=\"#06 - Repetição\" color=\"#FF4C65\">\n//                 <ListaAlunos />\n//             </Card>\n//             <Card titulo=\"#05 - Componentes com Filho\" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\">\n//                     <FamiliaMembro nome=\"Angelina\" />\n//                     <FamiliaMembro nome=\"Santa\" />\n//                     <FamiliaMembro nome=\"Bruno\" />\n//                 </Familia>\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//                 </Card>\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                     <Primeiro />\n//                 </Card>\n//         </div>\n//     </div>\n\n/**\r\n * AULA 28 e 29 - DESAFIO REPETIÇÃO (resposta professor)\r\n * \r\n * 1) Dentro da pasta de /data temos que criar um arquivo chamado produtos.js\r\n * 2) produtos.js tera 3 atributos: id, nome e preço\r\n * 3) Dentro da pasta /repeticao vamos criar uma arquvo chamado tabelaProdutos.jsx\r\n * 4) Dentro do tabela produtos temos que criar uma tabela com esses produtos.\r\n * \r\n * \r\n */\n// FORMA 1\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 28</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\n//                 <TabelaProdutos />\n//             </Card>\n//             <Card titulo=\"#06 - Repetição\" color=\"#FF4C65\">\n//                 <ListaAlunos />\n//             </Card>\n//             <Card titulo=\"#05 - Componentes com Filho\" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\">\n//                     <FamiliaMembro nome=\"Angelina\" />\n//                     <FamiliaMembro nome=\"Santa\" />\n//                     <FamiliaMembro nome=\"Bruno\" />\n//                 </Familia>\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//                 </Card>\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                     <Primeiro />\n//                 </Card>\n//         </div>\n//     </div>\n\n/**\r\n * AULA 27 - REPETIÇÃO\r\n * \r\n * Vamos criar outra pasta para esse exercicio chamada /repetição e criar um exercicio[listaAlunos.jsx] para mostrarmos uma lista.\r\n * \r\n * 1) Apos a criação do compoente ListaAlunos.jsx vamos importa-lo para ca\r\n * \r\n * 2) para tornar o exemplo um pouco mais realista, vamos cria ruma pasta fora de componentes chamada /data e dentro vamos criar um arquivo chamado alunos.js\r\n * 3) Será um arquivo java script puro, nele vamos exportar um array com varios objetos dentro.\r\n */\n// FORMA 1\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 27</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#06 - Repetição\" color=\"#FF4C65\">\n//                 <ListaAlunos />\n//             </Card>\n//             <Card titulo=\"#05 - Componentes com Filho\" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\">\n//                     <FamiliaMembro nome=\"Angelina\" />\n//                     <FamiliaMembro nome=\"Santa\" />\n//                     <FamiliaMembro nome=\"Bruno\" />\n//                 </Familia>\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                 <Primeiro />\n//             </Card>\n//         </div>\n//     </div>\n\n/***\r\n * AULA 26 - COMPONENTE COM FILHO #02\r\n * \r\n * FORMA 1 -> AULA PASSADA\r\n * \r\n * vamos tornar as coisas um pouco mais complicados no que diz respeito a conseguirmos passar as propriedades do elemento PAI para os FILHOS\r\n * \r\n * Na aula passada criamos o componente familia. Temos um relação direta, onde a propria familia tem a relação/referencia direta para os membros da familia, e conseguimos passar os atributos diretamente do pai para o filho usando props (spreding)-> {...props}\r\n *\r\n * FORMA 2 - REFERENCIANDO COM {PROPS.CHILDREN}\r\n *\r\n * 1) retira o import de FamiliaMembro no familia.jsx\r\n * 2) dentro do app.jsx vamos passar os membros no corpo da <Familia> e importar o componente FamiliaMembro.jsx\r\n * 3) Se salvarmos como esta agora, teremos um problema, pois nao temos {props} em nenhum local. Não estamos recebendo {props} e dessa forma nao temos como pegar as informações do componente pai para ao filho.\r\n * \r\n * FORMA 3 - tirando o props\r\n * \r\n * 1) apos retirarmos o props vemos que nosso componente será renderizado.\r\n * 2) para colocarmos o sobrenome que colocamos no componente familia para o componente familiaMembro vamos ter que fazer um trabalho no componente familia.jsx \r\n * 3) Conseguimos acessar metodos, inclusive os do react. Vamos ter que comentar os membros da familia colocados no app.jsx pois no caso que vamos fazer agora, so funciona com um unico elemento.\r\n * 4) METODO -> {React.cloneElement(props.chiuldren)}\r\n * \r\n */\n// FORMA 3 - RETIRANDO O PROPS E ESPECIFICANDO DENTRO DO COMPONENTE FAMILIA\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos react 26</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#05 - Compoente com Filhos\" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\">\n//                     <FamiliaMembro nome=\"Angelina\" />\n//                     <FamiliaMembro nome=\"santa\" />\n//                     <FamiliaMembro nome=\"Kaya\" />\n//                 </Familia>\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Paramentro\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                 <Primeiro />\n//             </Card>\n//         </div>\n//     </div>\n// FORMA 2 - IRÁ DAR UM ERRO POIS NÃO DEFINIMOS O PROPS.\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 26</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#05 - Componente com filhos\" color=\"#00C8F8\">\n//                 <familiaMembro nome=\"Angelina\" sobrenome={props.sobrenome}/>\n//                 <familiaMembro nome=\"Santa\" {...props} />\n//                 <familiaMembro nome=\"Bruno\" sobrenome=\"Pereira\" />\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={100} max={200} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com parametro\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                 <Primeiro />\n//             </Card>\n//         </div>\n//     </div>\n// FORMA 1\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 26</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#05 - Componente com filhos\" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\" />\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={1} max={60} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\n//                 <ComParametro titulo=\"Situação do Aluno\" nome=\"Angelina Pierre\" nota={9.3} />\n//                 <ComParametro titulo=\"Situação do Aluno\" nome=\"Santa Kaya\" nota={0.4} />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                 <Primeiro />\n//             </Card>\n//         </div>\n//     </div>\n\n/**\r\n * AULA 25 - COMPOMENTE COM FILHO #01\r\n * \r\n * Vamos criar 2 componente dentro de /basico\r\n * \r\n * Apos criar Familia.jsx e FamiliaMembro.jsx vamos adicionar esses componentes em cards..\r\n * \r\n * Vamos importar o componente Familia, não precisamos importar por quanto o FamiliaMembro.jsx pois ele ja foi importado dentro de familia.jsx\r\n * \r\n * FORMA 1/2 -> Componente criado e passado os valores de maneira fixa, vamos passa usando o props.\r\n * \r\n * FORMA 3 -> Passamos o sobrenome para o componente <Familia /> agora iremos querer ler os nomes nos membros da familia.\r\n * - Queremos passar a propriedade [sobrenome=\"Pierre\"] do componente <Familia/> para o componente <FamiliaMembro />\r\n * \r\n */\n// FORMA 2\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 25</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#05 - Componente com filhos [#01]\" color=\"#00C8F8\">\n//                 <Familia sobrenome=\"Pierre\" />\n//             </Card>\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={1} max={60} />\n//             </Card>\n//             <Card titulo=\"#03 - Framento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota={0.3}\n//                 />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                 <Primeiro />\n//             </Card>\n//         </div>\n//     </div>\n// FORMA 1\n// export default _ =>\n// <div className=\"App\">\n//     <h1>Fundamentos React 25</h1>\n//     <div className=\"Cards\">\n//         <Card titulo=\"#05 - Componente com filhos #01\" color=\"#00C8F8\">\n//             <Familia />\n//         </Card>\n//         <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//             <Aleatorio min={1} max={60} />\n//             <Aleatorio min={1} max={60} />\n//         </Card>\n//         <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//             <Fragmento />\n//         </Card>\n//         <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\n//             <ComParametro \n//                 titulo=\"Situação do Aluno\"\n//                 nome=\"Angelina Pierre\"\n//                 nota={9.3}\n//             />\n//             <ComParametro \n//                 titulo=\"Situação do Aluno\"\n//                 nome=\"Santa Kaya\"\n//                 nota={0.3}\n//             />\n//         </Card>\n//         <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//             <Primeiro />\n//         </Card>\n//     </div>\n// </div>\n\n/**\r\n * AULA 24  COMPONENTE CARD #3\r\n * \r\n * Vamos agora passar a cor como parametro. VAmos aplicar no background do do titulo e na borda do componente a cor\r\n * \r\n * Vamos poder tirar o background do css\r\n * \r\n */\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 24</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={1} max={60} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota=\"0.4\"\n//                 />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\n//                 <Primeiro></Primeiro>\n//             </Card>\n//         </div>\n//     </div>\n\n/**\r\n * AULA 23 - COMPONENTE CARD #2\r\n * \r\n * Vamos envolver todos os nosso componentes <Card> dentro de uma <div className=\"Cards\">\r\n * \r\n * Vamos tbm criar um arquivo css para o app.jsx\r\n * \r\n */\n// FORMA 1\n// export default _ =>\n//     <div className=\"App\">\n//         <h1>Fundamentos React 23</h1>\n//         <div className=\"Cards\">\n//             <Card titulo=\"#04 - Desafio Aleatorio\">\n//                 <Aleatorio min={1} max={60} />\n//                 <Aleatorio min={1} max={60} />\n//             </Card>\n//             <Card titulo=\"#03 - Fragmento\">\n//                 <Fragmento />\n//             </Card>\n//             <Card titulo=\"#02 - Com Parametro\">\n//                 <ComParametro\n//                     titulo=\"Situação do Aluno\"\n//                     nome=\"Angelina Pierre\"\n//                     nota={9.3}\n//                 />\n//                 <ComParametro\n//                     titulo=\"Situação do aluno\"\n//                     nome=\"Santa Kaya\"\n//                     nota=\"0.4\"\n//                 />\n//             </Card>\n//             <Card titulo=\"#01 - Primeiro Componente\">\n//                 <Primeiro></Primeiro>\n//             </Card>\n//         </div>\n//     </div>\n\n/**\r\n *      AULA 22 - COMPONENETE CARD #1\r\n *\r\n *  FORMA 2 - Perceba que esta mostrando a palavra conteudo e nao o valor da tag <aleatorio>\r\n *      **EXPLICAÇÃO EM Card.jsx\r\n *\r\n */\n// FORMA 2\n// export default _ =>\n//     <div id=\"app\">\n//         <h1>Fundamentos React 22</h1>\n//         <Card titulo=\"#04 - Desafio Aleatorio\">\n//             <Aleatorio min={1} max={60}/>\n//             <Aleatorio min={1} max={60}/>\n//         </Card>\n//         <Card titulo=\"#03 - Fragmento\">\n//             <Fragmento />\n//         </Card>\n//         <Card titulo=\"#02 - Com Parametro\">\n//             <ComParametro\n//                 titulo=\"Situação do Aluno\"\n//                 nome=\"Angelina Pierre\"\n//                 nota={9.3}\n//             />\n//             <ComParametro\n//                 titulo=\"Situação do aluno\"\n//                 nome=\"Santa Kaya\"\n//                 nota=\"0.4\"\n//             />\n//             </Card>\n//         <Card titulo=\"#01 - Primeiro Componente\">\n//             <Primeiro></Primeiro>\n//         </Card>\n//     </div>\n// FORMA 1\n// export default _ =>\n//     <div id =\"app\">\n//         <h1>Fundamentos React 22</h1>\n//         <Card\n//             titulo=\"Exemplo de card\"\n//         />\n//         <Aleatorio\n//             min={1}\n//             max={60}\n//         />\n//         <Fragmento />\n//         <ComParametro\n//             titulo=\"Situação Aluno\"\n//             nome=\"Angelina Pierre\"\n//             nota = {9.3}\n//         />\n//         <ComParametro\n//         titulo=\"Situação Aluno\"\n//         nome=\"otavio manga\"\n//         nota = {0.3}\n//     />\n//         <Primeiro></Primeiro>\n//     </div>\n\n/**\r\n *      AULA 20/21 -> DESAFIO DO NUMERO ALEATORIO\r\n *\r\n */\n// export default _ =>\n//     <div id=\"app\">\n//         <h1>Fundamentos React 7</h1>\n//         <Aleatorio\n//             min={1}\n//             max={60}\n//         />\n//         <Fragmento />\n//         <ComParametro\n//             titulo=\"Situação do Aluno\"\n//             nome=\"Angelina Pierre\"\n//             nota={9.3}\n//         />\n//         <Primeiro></Primeiro>\n//     </div>\n\n/**\r\n *      AULA 19 - COMPONENTE APP\r\n *\r\n * // FORMA 1\r\n * Em vez de colocar todos os nossos componentes dentro de index.js vamos criar um componente chamado app.jsx para guardar nossa aplicação.\r\n *\r\n * FORMA 2 - MAIS SIMPLIFICADA\r\n *\r\n * Quando temos o [exporte default] podemos retornar uma função anonima.\r\n *\r\n * Observe que o vscode esta mostrando que eh uma função anonima\r\n *\r\n * Se tirar o [default] não poderemos ter uma função anonima.\r\n *\r\n * FORMA 3 - ARROW FUNCTION\r\n *\r\n * Podemos substituir a palabra function por [=>] arrow function.\r\n *\r\n * FORMA 4 - Como so temos um parametro para a função podemos retirar os parenteses\r\n *\r\n * FORMA 5 - COMO NÃO VAMOS USAR O PROPS PODEMOS COLOCAR ()\r\n *\r\n * FORMA 6 - PODEMOS USAR O UNDERLINE PARA DIZER QUE TEMOS 1 PARAMETRO MAS NÃO IREMOS USA-LO.\r\n *\r\n * FORMA 7 - TIRANDO O CORPO DA FUNÇÃO\r\n *  - Não se pode fazer isso numa função normal.\r\n *\r\n * Vamos usar essa forma para as função\r\n *\r\n * Formatador ctrl+shift+f ou alt\r\n *\r\n */\n// FORMA 7 - FORMA MAIS REDUZIDA.\n// export default _ =>\n//     <div id=\"app\">\n//         <h1>Fundamentos React 7</h1>\n//         <Fragmento />\n//         <ComParametro\n//             titulo=\"Situação do Aluno\"\n//             nome=\"Angelina Pierre\"\n//             nota={9.3}\n//         />\n//         <Primeiro></Primeiro>\n//     </div>\n// FORMA 6\n// export default _ => {\n//     return (\n//         <div id=\"app\">\n//             <h1>Fundamentos React 6</h1>\n//             <Fragmento />\n//             <ComParametro\n//                 titulo = \"Situação do Aluno\"\n//                 nome = \"Angelina Pierre\"\n//                 nota = {9.3}\n//             />\n//             <Primeiro></Primeiro>\n//         </div>\n//     )\n// }\n// FORMA 5 - USANDO SOMENTES ()\n// export default () => {\n//     return (\n//         <div id=\"app\">\n//             <h1>Fundamentos React 5</h1>\n//             <Fragmento />\n//             <ComParametro\n//                 titulo = \"Situação do Aluno\"\n//                 nome = \"Angelina Pierre\"\n//                 nota = {9.3}\n//             />\n//             <Primeiro></Primeiro>\n//         </div>\n//     )\n// }\n// FORMA 4 - SEM PARENTESES\n// export default props => {\n//     return (\n//         <div id=\"app\">\n//             <h1>Fundamentos React 4</h1>\n//             <Fragmento />\n//             <ComParametro\n//                 titulo = \"Situação do Aluno\"\n//                 nome = \"Angelina Pierre\"\n//                 nota = {9.3}\n//             />\n//             <Primeiro></Primeiro>\n//         </div>\n//     )\n// }\n// FORMA 3 - ARROW FUNCTION\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default (props) => {\n//     return (\n//         <div id=\"app\">\n//             <h1>Fundamentos React (ARROW)</h1>\n//             <Fragmento />\n//             <ComParametro\n//                 titulo = \"Situação do Aluno\"\n//                 nome = \"Angelina Pierre\"\n//                 nota = {9.3}\n//             />\n//             <Primeiro></Primeiro>\n//         </div>\n//     )\n// }\n// FORMA 2 -> MAIS SIMPLIFICADA\n// export default function(props){\n//     return (\n//         <div id=\"app\">\n//             <h1>Fundamentos React 2</h1>\n//             <Fragmento />\n//             <ComParametro\n//                 titulo = \"Situação do Aluno\"\n//                 nome = \"Angelina Pierre\"\n//                 nota = {9.3}\n//             />\n//             <Primeiro />\n//         </div>\n//     )\n// }\n// FORMA 1\n// export default function App(props){\n//     return (\n//         <div id=\"app\">\n//             <h1>Fundamentos React</h1>\n//             <Fragmento />\n//             <ComParametro\n//                 titulo = \"Situação do Aluno\"\n//                 aluno = \"Angelina Pierre\"\n//                 nota = {9.3}\n//             />\n//             <Primeiro />\n//         </div>\n//     )\n// }","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/fundamentos-react/src/App.jsx"],"names":["React","Primeiro","ComParametro","Fragmento","Aleatorio","Card","Familia","FamiliaMembro","ListaAlunos","TabelaProdutos","ParOuImpar","UsuarioInfo","DiretaPai","_","nome","email"],"mappings":";;AAAA;AAGA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAeC,CAAC,iBACZ;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,gCAAb;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,yCAAb;AAAiD,MAAA,KAAK,EAAC,SAAvD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAI;AACpBC,UAAAA,IAAI,EAAE;AADc;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAYI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,yCAAb;AAAiD,MAAA,KAAK,EAAC,SAAvD;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ,eAeI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,kCAAb;AAA0C,MAAA,KAAK,EAAC,SAAhD;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ,eAkBI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,uBAAb;AAA+B,MAAA,KAAK,EAAC,SAArC;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAqBI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,8BAAb;AAA4C,MAAA,KAAK,EAAC,SAAlD;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ,eA4BI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,yBAAb;AAAuC,MAAA,KAAK,EAAC,SAA7C;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAE,CAAhB;AAAmB,QAAA,GAAG,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAE,GAAhB;AAAqB,QAAA,GAAG,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,eAgCI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,iBAAb;AAA+B,MAAA,KAAK,EAAC,SAArC;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhCJ,eAmCI,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,sBAAb;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAA,8BACI,QAAC,YAAD;AACI,QAAA,MAAM,EAAC,yBADX;AAEI,QAAA,IAAI,EAAC,iBAFT;AAGI,QAAA,IAAI,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,YAAD;AACI,QAAA,MAAM,EAAC,yBADX;AAEI,QAAA,IAAI,EAAC,YAFT;AAGI,QAAA,IAAI,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCJ,eA+CQ,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,2BAAb;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA/CR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAysourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n\r\n\r\n// import react\r\nimport React from 'react'\r\n\r\n// import layout\r\nimport './App.css'\r\n\r\n// import compomnentes\r\nimport Primeiro from './components/basicos/Primeiro'\r\nimport ComParametro from './components/basicos/ComParametro'\r\nimport Fragmento from './components/basicos/Fragmento'\r\nimport Aleatorio from './components/basicos/Aleatorio'\r\nimport Card from './components/layout/Card'\r\nimport Familia from './components/basicos/Familia'\r\nimport FamiliaMembro from './components/basicos/FamiliaMembro'\r\nimport ListaAlunos from './components/repeticao/ListaAlunos'\r\nimport TabelaProdutos from './components/repeticao/TabelaProdutos'\r\nimport ParOuImpar from './components/condicional/ParOuImpar'\r\nimport UsuarioInfo from './components/condicional/UsuarioInfo'\r\nimport DiretaPai from \"./components/comunicacao/DiretaPai\"\r\n\r\n/**\r\n * AULA 34 - COMUNICAÇÃO INDIRETA\r\n * \r\n * Quando precisamos passar informações do componente filho para o componente pai.\r\n * \r\n * O componente filho não possui uma referencia direta para o componente pai, logo não temos como via propriedade instanciar um componente pai, pq assim o pai passaria a ser o filho e o filho passaria a ser o pai.\r\n * \r\n * Vamos demonstrar isso com 2 exemplos, um pelo console e na px aula, vamos criar um compoente com estado.\r\n * \r\n */\r\n\r\n/**\r\n * AULA 33 - COMUNICAÇÃO DIRETA\r\n * \r\n * A nossa aplicação é uma arvore de componentes, temos o componente [app] que ira representar o conteudo da aplicação dentro desse componente de conteudo vamos ter um titulo, alem do titulo podemos ter uma tabela, e ddentro dessa tabela uma thead.\r\n * \r\n * Voce pode quebrar sua aplicação em multiplos componentes sempre visando o re-uso e a organização;\r\n * \r\n * Se temos um componente que precisa ser re-usado, voce coloca ele num trecho e re-usa ele.\r\n * \r\n * Se voce tem um componente que nao precisa ser re-usadoi mas ele eh muito grande, podemos quebrar ele em partes para manter assim a organização.\r\n * \r\n * Dentro dessa arvore de componentes é muito comum termo a COMUNICAÇÃO DIRETA e a COMUNICAÇÃO INDIRETA.\r\n * \r\n * // FORMA 1 -> COMUNICAÇÃO DIRETA\r\n * \r\n * Vamos mostrar que a comunicação direta é feita atraves das props...\r\n * \r\n * Vamos criar um novo componente para isso.. /comunicacao/DiretaPai.jsx\r\n *                                           /comunicacao/DiretaFilho.jsx\r\n * 1) Dentro do filho vamos supor que queremos receber algumas informações...\r\n *      - Vamos ter uma PROPRIEDADE TEXTUAL\r\n *      - Vamos ter uma PROPRIEDADE NUMERICA\r\n *      - Vamos ter uma PROPRIEDADE BOOLEANA.\r\n * 2) A comunicação de um componente pai para um filho é feita passando via [props]/ propriedades o que quremos passar do pai pro filho..\r\n * 3) À uma relação direta pois dentro do pai temos uma referencia para o componente filho.\r\n *      - DiretaPai.jsx > import DiretaFilho from './'\r\n * 4) Agora temos de forma literal uma definição de um componente <DiretaFilho> de tal forma que conseguimos agora passar um texto, um numero, e um valor booleano.\r\n * 5) O valor booleano no filho pode ser transformado em texto, [VERDADEIRO|FALSO]\r\n * 6) Dessa forma podemos ir agora no App.jsx e criar um novo card para a comunicação direta.\r\n * \r\n * FORMA 2\r\n * 1) Em vez de termos um <div> vamos trocar por <span>\r\n * 2) Podemos no [DiretaPai.jsx] definir novos filhos...\r\n * \r\n * FORMA 3 - COLOCANDO NOMES MAIS SIGNIFICATIVOS [DiretaPai.jsx e DiretaFilho.jsx]\r\n * \r\n * \r\n * Quando falamos comunicação estamos dizendo, nos referindo a  troca de informações, ou seja, estamos passando informações do componente pai para o filho via propriedades [props.]\r\n * \r\n * Vimos a comunicação direta quandoc riamos o componente <Familia> onde passavamos as prorpeidades de sobrenome e no <FamiliaMembro> passamos o nome dos familiares.\r\n *      Nesse caso usamos a função map para passar as propriedades de <familia> para <FamiliaMembro>\r\n *      {\r\n                props.children.map((child, i) =>{\r\n                    return cloneElement( child, {...props, key: i})\r\n                })\r\n            }\r\n * \r\n * \r\n */\r\nexport default _ => \r\n    <div className=\"App\">\r\n        <h1>Fundamentos React 33</h1>\r\n        <div className=\"Cards\">\r\n            <Card titulo=\"#09 - COMUNICAÇÃO DIRETA\" color=\"#59323C\">\r\n                <DiretaPai />\r\n            </Card>\r\n            <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color=\"#982365\">\r\n                <UsuarioInfo usuario = {{\r\n                    nome: 'Angelina'\r\n                }}/>\r\n                <UsuarioInfo usuario={{ email: 'Angelina@hotmail.com' }} />\r\n                <UsuarioInfo usuario={{}} />\r\n                <UsuarioInfo />\r\n            </Card>\r\n            <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\r\n                <ParOuImpar numero={20}></ParOuImpar>\r\n            </Card>\r\n            <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\r\n                <TabelaProdutos />\r\n            </Card>\r\n            <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\r\n                <ListaAlunos />\r\n            </Card>\r\n            <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\r\n                <Familia sobrenome=\"Pierre\">\r\n                    <FamiliaMembro nome=\"Angelina\" />\r\n                    <FamiliaMembro nome=\"Bruno\" />\r\n                    <FamiliaMembro nome=\"Santa\" />\r\n                </Familia>\r\n            </Card>\r\n            <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n                <Aleatorio min={1} max={60} />\r\n                <Aleatorio min={100} max={200} />\r\n            </Card>\r\n            <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n                <Fragmento />\r\n            </Card>\r\n            <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n                <ComParametro\r\n                    titulo=\"Situação do Aluno\"\r\n                    nome=\"Angelina Pierre\"\r\n                    nota={9.3}\r\n                />\r\n                <ComParametro\r\n                    titulo=\"Situação do Aluno\"\r\n                    nome=\"Santa Kaya\"\r\n                    nota={0.3}\r\n                />\r\n                </Card>\r\n                <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n                    <Primeiro />\r\n                </Card>\r\n        </div>\r\n    </div>\r\n\r\n\r\n/**\r\n * AULA 32 - RENDERIZAÇÃO CONDICIONAL #03\r\n * \r\n * Vamos fazer a renderização com [if|else]\r\n * \r\n * Para funcionar precisaremos fazer algumas alterações:\r\n *  1) if.js > vamos exportar uma constante [else] com um componente funcional que ira retornar um props.children, ira passar propriedades que foram passadas para o componente...\r\n *  2) Como fazemos para importar um compoente que so possui um export....\r\n *      - Estavamos fazendo o export default\r\n *      - No import do If, iremos colocar tbm o import do componente...\r\n                import If, {Else} from './If'\r\n *  3) PERCEBA QUE ESTA APARECENDO AS DUAS CONDIÇÕES, TEREMOS QUE MECHER NO NOSSO IF PARA CONFIGURAR NESSE SENTIDO.\r\n * \r\n * FORMA 1\r\n * \r\n * Nosso componente <IF> possui um componente filho <Else>, para termos acesso a esse componente criamos uma variavel [elseChild] que fara uma filtragem dos filhos desse componente....\r\n    const elseChild = props.children.filter(child)\r\n *      Child => será uma função onde colocaremos a condição.\r\n        se child.type.name for igual a 'Else' teremos o componente [elseChild] que ira retornar um array, mas queremos pegar somente o primeiro [Else] -> para isso  [0]\r\n        const elseChild = props.children.filter(child => {\r\n        return child.type && child.type.name === 'Else'\r\n        })[0]\r\n        \r\n        Caso o primeiro elemento do array nao exista irá retornar um undefined.\r\n * \r\n * 1) vimos no console que o elemento[Else] existe como um objeto, caso não encontre o elemento será tratado como undefined.\r\n * \r\n * // FORMA 2\r\n * \r\n * Não queremos mostrar o Else caso não seja condição dele, para isso temos que criar um if para comprar com o primeiro valor da constante para elseChild que criamos\r\n * \r\n *  1) Agora nesse caso em vez de retornar o props.children vamos retornar o ifCHildren apenas...\r\n * --- Agora vemos que criamos uma estrutura condicional com if/else\r\n *\r\n * FORMA 3 - MOSTRANDO SOMENTE O ELSE CASO SEJA VERDADEIRO....\r\n * \r\n */\r\n// FORMA 1\r\n//  export default _ =>\r\n//  <div className=\"App\">\r\n//      <h1>Fundamentos React 31</h1>\r\n//      <div className=\"Cards\">\r\n//          <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color =\"#982365\">\r\n//              <UsuarioInfo usuario={{ nome: 'Angelina' }} />\r\n//              <UsuarioInfo usuario={{ email: 'Angelina@hotmail.com' }} />\r\n//              <UsuarioInfo usuario={{}} />\r\n//              <UsuarioInfo />\r\n//          </Card>\r\n//          <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\r\n//              <ParOuImpar numero={20}></ParOuImpar>\r\n//          </Card>\r\n//          <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\r\n//              <TabelaProdutos />\r\n//          </Card>\r\n//          <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\r\n//              <ListaAlunos />\r\n//          </Card>\r\n//          <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\r\n//              <Familia sobrenome=\"Pierre\">\r\n//                  <FamiliaMembro nome=\"Angelina\" />\r\n//                  <FamiliaMembro nome=\"Bruno\" />\r\n//                  <FamiliaMembro nome=\"Santa\" />\r\n//              </Familia>\r\n//          </Card>\r\n//          <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//              <Aleatorio min={1} max={60} />\r\n//              <Aleatorio min={100} max={200} />\r\n//          </Card>\r\n//          <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//              <Fragmento />\r\n//          </Card>\r\n//          <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n//              <ComParametro\r\n//                  titulo=\"Situação do Aluno\"\r\n//                  nome=\"Angelina Pierre\"\r\n//                  nota={9.3}\r\n//              />\r\n//              <ComParametro\r\n//                  titulo=\"Situação do Aluno\"\r\n//                  nome=\"Santa Kaya\"\r\n//                  nota={0.3}\r\n//              />\r\n//              </Card>\r\n//              <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                  <Primeiro />\r\n//              </Card>\r\n//      </div>\r\n//  </div>\r\n\r\n\r\n/***\r\n * AULA 31 - RENDERIZAÇÃO CONDICIONAL #02\r\n * \r\n * Vamos fazer um COMPONENTE para nos ajudar na renderização condicional\r\n * \r\n * Aula passada fizemos uma renderização condicional usando um OPERADOR TERNARIO. Agora iremos criar um componente e a partir dele conseguirmos renderizar um trecho .jsx ou não.\r\n * \r\n * Vamos criar um arquivo em /condicional>If.js ou js tanto faz\r\n * \r\n * FORMA 1 \r\n * \r\n * Inicialmente vamos criar um componente funcional simples.\r\n * \r\n * A ideia é criar um componente com uma propriedade chamada teste, e nessa proprriedade teramos uma expressão que pode ser verdadeira ou falsa.\r\n * [Verdadeira] -> Conteudo de <span> será exibido.\r\n * [Falsa] -> Nada será renderizado\r\n *      <If test={expressão}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n *      <If test={aluno.nota >= 7}> ============componente\r\n *          <span>...</span>  ============filhos do componente\r\n *          <span>...</span>\r\n *          <span>...</span>\r\n *      </If>\r\n * \r\n * [props.children] -> Selecionar os elementos que foram passados no corpo de um componente.\r\n *  Retorno do if(props.test)\r\n *      <span>...</span>\r\n *      <span>...</span>\r\n *      <span>...</span> \r\n * \r\n * Vamos criar outro componente chamado UsuarioInfo.js para testar nosso compoennte if...\r\n * \r\n * FORMA 1\r\n * \r\n * Caso nao tenha usuario vamos mostrar outra coisa\r\n * \r\n * 1) Importa componente dentro de [App.jsx]\r\n * 2) Vamos apssa a propriedade usuario, lebrando que o primeiro par de {} é para termos um trecho que será interpretado em JS, e o segundo é oara indicar que queremos criar um objeto que representa um usuario.\r\n * 3) apos modificação, em usuarioInfo.jsx vamos colocar o {props}para acessar.... \r\n * \r\n * FORMA 1\r\n * \r\n * [OBS] -> Podemos nos precaver caso tentem acessar um objeto que nao existe ou caso nao digitem nada.\r\n *      No lugar das {} podemos tbm colocar um valor padrão para impedir o acesso...\r\n * \r\n * FORMA 2 - importando o componente <If>\r\n * \r\n * 1) importar o componente e envolver na resposta aplicando o teste\r\n * 2) [teste] recebe se usuario estiver setado e usuario.nome for valido;\r\n *      test={usuario && usuario.nome}\r\n *  2.1) usuario.nome != de NULL ou VAZIO {}\r\n * \r\n * 3) vamos em App.js criar um novo usuario com email emv ez de nome\r\n * \r\n * FORMA 4\r\n * 1) Para caso a propriedade usuario não exista, escolhemos o que será exibido em tela.\r\n * \r\n */\r\n//FORMA 2\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 31</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color =\"#982365\">\r\n//                 <UsuarioInfo usuario={{ nome: 'Angelina' }} />\r\n//                 <UsuarioInfo usuario={{ email: 'Angelina@hotmail.com' }} />\r\n//                 <UsuarioInfo usuario={{}} />\r\n//                 <UsuarioInfo />\r\n//             </Card>\r\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\r\n//                 <ParOuImpar numero={20}></ParOuImpar>\r\n//             </Card>\r\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\r\n//                 <TabelaProdutos />\r\n//             </Card>\r\n//             <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\r\n//                 <ListaAlunos />\r\n//             </Card>\r\n//             <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\">\r\n//                     <FamiliaMembro nome=\"Angelina\" />\r\n//                     <FamiliaMembro nome=\"Bruno\" />\r\n//                     <FamiliaMembro nome=\"Santa\" />\r\n//                 </Familia>\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//                 </Card>\r\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                     <Primeiro />\r\n//                 </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n// //FORMA 1\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 31</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P2\" color =\"#982365\">\r\n//                 <UsuarioInfo usuario={{ nome: 'Angelina' }} />\r\n//             </Card>\r\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\r\n//                 <ParOuImpar numero={20}></ParOuImpar>\r\n//             </Card>\r\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\r\n//                 <TabelaProdutos />\r\n//             </Card>\r\n//             <Card titulo=\"#06 - REPETIÇÃO\" color=\"#FF4C65\">\r\n//                 <ListaAlunos />\r\n//             </Card>\r\n//             <Card titulo=\"#05 - COMPONENTES COM FILHO \" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\">\r\n//                     <FamiliaMembro nome=\"Angelina\" />\r\n//                     <FamiliaMembro nome=\"Bruno\" />\r\n//                     <FamiliaMembro nome=\"Santa\" />\r\n//                 </Familia>\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//                 </Card>\r\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                     <Primeiro />\r\n//                 </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n/**\r\n * AULA 30 - RENDERIZAÇÃO CONDICIONAL #01\r\n * \r\n * Vamos criar uma nova pasta chamada /condicional e criar um arquivo .jsx chamado ParOuImpar.jsx.\r\n * O mesmo principio utilizado no .css de condição iremos utilizar aqui.\r\n *       <tr key={produto.id} className={i % 2 === 0 ? 'Par' : 'Impar'}>\r\n                    <td>{produto.id}</td>\r\n                    <td>{produto.nome}</td>\r\n                    <td>{produto.preco.toFixed(2).replace('.',',')}</td>\r\n                </tr>\r\n * \r\n * Vamos passar um numero como parametro e queremos que msotre se o numero eh par ou impar de acordo com o valor passado\r\n * \r\n * FORMA 1 - A ideia é,vamos receber um numero a partir as propriedades (props), e queremos saber quando vamos exibir que determinado numero é par ou impar baseado em uma renderização condicional.\r\n * 1) inserir o componente dentro de app.jsx(import)\r\n * 2) vamos pegar o componente criado e colocar dentro de um <card> em app.jsx\r\n * 3) colocar a propriedade numero no formato de numero mesmo kkkkkk\r\n                <ParOuImpar numero={20}></ParOuImpar>\r\n * \r\n * FORMA 2\r\n * 1) No componente, o que precisamos saber? temos um numero e queremos saber se ele é par ou impar...\r\n *  1.1) Podemos calcular isso:\r\n        const isPar = props.numero % 2 === 0 \r\n *      Ou seja com essa variavel ou expressão podemos calcular\r\n    1.2) Com essa variavel ou expressão podemos usar um codigo JS na <div> dentro de {chaves}, criando uma OPERATAÇÃO TERNÁRIA (3 valores), onde caso seja par irá mostrar o trecho jsx <span>Par</span> caso contrario <span>Ímpar</span>\r\n *\r\n *\r\n * Na proxima aula vamos criar uma componente [if?] que será usado para fazer a renderização condicional.\r\n * \r\n * \r\n */\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 28</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#08 - RENDERIZAÇÃO CONDICIONAL P1\" color=\"#982395\">\r\n//                 <ParOuImpar numero={20}></ParOuImpar>\r\n//             </Card>\r\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\r\n//                 <TabelaProdutos />\r\n//             </Card>\r\n//             <Card titulo=\"#06 - Repetição\" color=\"#FF4C65\">\r\n//                 <ListaAlunos />\r\n//             </Card>\r\n//             <Card titulo=\"#05 - Componentes com Filho\" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\">\r\n//                     <FamiliaMembro nome=\"Angelina\" />\r\n//                     <FamiliaMembro nome=\"Santa\" />\r\n//                     <FamiliaMembro nome=\"Bruno\" />\r\n//                 </Familia>\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//                 </Card>\r\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                     <Primeiro />\r\n//                 </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n\r\n\r\n\r\n/**\r\n * AULA 28 e 29 - DESAFIO REPETIÇÃO (resposta professor)\r\n * \r\n * 1) Dentro da pasta de /data temos que criar um arquivo chamado produtos.js\r\n * 2) produtos.js tera 3 atributos: id, nome e preço\r\n * 3) Dentro da pasta /repeticao vamos criar uma arquvo chamado tabelaProdutos.jsx\r\n * 4) Dentro do tabela produtos temos que criar uma tabela com esses produtos.\r\n * \r\n * \r\n */\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 28</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#07 - DESAFIO DE REPETIÇÃO\" color=\"#3A9AD9\">\r\n//                 <TabelaProdutos />\r\n//             </Card>\r\n//             <Card titulo=\"#06 - Repetição\" color=\"#FF4C65\">\r\n//                 <ListaAlunos />\r\n//             </Card>\r\n//             <Card titulo=\"#05 - Componentes com Filho\" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\">\r\n//                     <FamiliaMembro nome=\"Angelina\" />\r\n//                     <FamiliaMembro nome=\"Santa\" />\r\n//                     <FamiliaMembro nome=\"Bruno\" />\r\n//                 </Familia>\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//                 </Card>\r\n//                 <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                     <Primeiro />\r\n//                 </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n\r\n/**\r\n * AULA 27 - REPETIÇÃO\r\n * \r\n * Vamos criar outra pasta para esse exercicio chamada /repetição e criar um exercicio[listaAlunos.jsx] para mostrarmos uma lista.\r\n * \r\n * 1) Apos a criação do compoente ListaAlunos.jsx vamos importa-lo para ca\r\n * \r\n * 2) para tornar o exemplo um pouco mais realista, vamos cria ruma pasta fora de componentes chamada /data e dentro vamos criar um arquivo chamado alunos.js\r\n * 3) Será um arquivo java script puro, nele vamos exportar um array com varios objetos dentro.\r\n */\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 27</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#06 - Repetição\" color=\"#FF4C65\">\r\n//                 <ListaAlunos />\r\n//             </Card>\r\n//             <Card titulo=\"#05 - Componentes com Filho\" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\">\r\n//                     <FamiliaMembro nome=\"Angelina\" />\r\n//                     <FamiliaMembro nome=\"Santa\" />\r\n//                     <FamiliaMembro nome=\"Bruno\" />\r\n//                 </Familia>\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametros\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                 <Primeiro />\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n\r\n\r\n\r\n/***\r\n * AULA 26 - COMPONENTE COM FILHO #02\r\n * \r\n * FORMA 1 -> AULA PASSADA\r\n * \r\n * vamos tornar as coisas um pouco mais complicados no que diz respeito a conseguirmos passar as propriedades do elemento PAI para os FILHOS\r\n * \r\n * Na aula passada criamos o componente familia. Temos um relação direta, onde a propria familia tem a relação/referencia direta para os membros da familia, e conseguimos passar os atributos diretamente do pai para o filho usando props (spreding)-> {...props}\r\n *\r\n * FORMA 2 - REFERENCIANDO COM {PROPS.CHILDREN}\r\n *\r\n * 1) retira o import de FamiliaMembro no familia.jsx\r\n * 2) dentro do app.jsx vamos passar os membros no corpo da <Familia> e importar o componente FamiliaMembro.jsx\r\n * 3) Se salvarmos como esta agora, teremos um problema, pois nao temos {props} em nenhum local. Não estamos recebendo {props} e dessa forma nao temos como pegar as informações do componente pai para ao filho.\r\n * \r\n * FORMA 3 - tirando o props\r\n * \r\n * 1) apos retirarmos o props vemos que nosso componente será renderizado.\r\n * 2) para colocarmos o sobrenome que colocamos no componente familia para o componente familiaMembro vamos ter que fazer um trabalho no componente familia.jsx \r\n * 3) Conseguimos acessar metodos, inclusive os do react. Vamos ter que comentar os membros da familia colocados no app.jsx pois no caso que vamos fazer agora, so funciona com um unico elemento.\r\n * 4) METODO -> {React.cloneElement(props.chiuldren)}\r\n * \r\n */\r\n\r\n// FORMA 3 - RETIRANDO O PROPS E ESPECIFICANDO DENTRO DO COMPONENTE FAMILIA\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos react 26</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#05 - Compoente com Filhos\" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\">\r\n//                     <FamiliaMembro nome=\"Angelina\" />\r\n//                     <FamiliaMembro nome=\"santa\" />\r\n//                     <FamiliaMembro nome=\"Kaya\" />\r\n//                 </Familia>\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Paramentro\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                 <Primeiro />\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n// FORMA 2 - IRÁ DAR UM ERRO POIS NÃO DEFINIMOS O PROPS.\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 26</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#05 - Componente com filhos\" color=\"#00C8F8\">\r\n//                 <familiaMembro nome=\"Angelina\" sobrenome={props.sobrenome}/>\r\n//                 <familiaMembro nome=\"Santa\" {...props} />\r\n//                 <familiaMembro nome=\"Bruno\" sobrenome=\"Pereira\" />\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={100} max={200} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com parametro\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                 <Primeiro />\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 26</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#05 - Componente com filhos\" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\" />\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={1} max={60} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\r\n//                 <ComParametro titulo=\"Situação do Aluno\" nome=\"Angelina Pierre\" nota={9.3} />\r\n//                 <ComParametro titulo=\"Situação do Aluno\" nome=\"Santa Kaya\" nota={0.4} />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                 <Primeiro />\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n/**\r\n * AULA 25 - COMPOMENTE COM FILHO #01\r\n * \r\n * Vamos criar 2 componente dentro de /basico\r\n * \r\n * Apos criar Familia.jsx e FamiliaMembro.jsx vamos adicionar esses componentes em cards..\r\n * \r\n * Vamos importar o componente Familia, não precisamos importar por quanto o FamiliaMembro.jsx pois ele ja foi importado dentro de familia.jsx\r\n * \r\n * FORMA 1/2 -> Componente criado e passado os valores de maneira fixa, vamos passa usando o props.\r\n * \r\n * FORMA 3 -> Passamos o sobrenome para o componente <Familia /> agora iremos querer ler os nomes nos membros da familia.\r\n * - Queremos passar a propriedade [sobrenome=\"Pierre\"] do componente <Familia/> para o componente <FamiliaMembro />\r\n * \r\n */\r\n\r\n// FORMA 2\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 25</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#05 - Componente com filhos [#01]\" color=\"#00C8F8\">\r\n//                 <Familia sobrenome=\"Pierre\" />\r\n//             </Card>\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={1} max={60} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Framento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota={0.3}\r\n//                 />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                 <Primeiro />\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n    // <div className=\"App\">\r\n    //     <h1>Fundamentos React 25</h1>\r\n    //     <div className=\"Cards\">\r\n    //         <Card titulo=\"#05 - Componente com filhos #01\" color=\"#00C8F8\">\r\n    //             <Familia />\r\n    //         </Card>\r\n    //         <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n    //             <Aleatorio min={1} max={60} />\r\n    //             <Aleatorio min={1} max={60} />\r\n    //         </Card>\r\n    //         <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n    //             <Fragmento />\r\n    //         </Card>\r\n    //         <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\r\n    //             <ComParametro \r\n    //                 titulo=\"Situação do Aluno\"\r\n    //                 nome=\"Angelina Pierre\"\r\n    //                 nota={9.3}\r\n    //             />\r\n    //             <ComParametro \r\n    //                 titulo=\"Situação do Aluno\"\r\n    //                 nome=\"Santa Kaya\"\r\n    //                 nota={0.3}\r\n    //             />\r\n    //         </Card>\r\n    //         <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n    //             <Primeiro />\r\n    //         </Card>\r\n\r\n    //     </div>\r\n    // </div>\r\n    \r\n\r\n/**\r\n * AULA 24  COMPONENTE CARD #3\r\n * \r\n * Vamos agora passar a cor como parametro. VAmos aplicar no background do do titulo e na borda do componente a cor\r\n * \r\n * Vamos poder tirar o background do css\r\n * \r\n */\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 24</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\" color=\"#FA6900\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={1} max={60} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\" color=\"#E94C6F\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametro\" color=\"#E8B71A\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota=\"0.4\"\r\n//                 />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\" color=\"#588C73\">\r\n//                 <Primeiro></Primeiro>\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n/**\r\n * AULA 23 - COMPONENTE CARD #2\r\n * \r\n * Vamos envolver todos os nosso componentes <Card> dentro de uma <div className=\"Cards\">\r\n * \r\n * Vamos tbm criar um arquivo css para o app.jsx\r\n * \r\n */\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n//     <div className=\"App\">\r\n//         <h1>Fundamentos React 23</h1>\r\n//         <div className=\"Cards\">\r\n//             <Card titulo=\"#04 - Desafio Aleatorio\">\r\n//                 <Aleatorio min={1} max={60} />\r\n//                 <Aleatorio min={1} max={60} />\r\n//             </Card>\r\n//             <Card titulo=\"#03 - Fragmento\">\r\n//                 <Fragmento />\r\n//             </Card>\r\n//             <Card titulo=\"#02 - Com Parametro\">\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do Aluno\"\r\n//                     nome=\"Angelina Pierre\"\r\n//                     nota={9.3}\r\n//                 />\r\n//                 <ComParametro\r\n//                     titulo=\"Situação do aluno\"\r\n//                     nome=\"Santa Kaya\"\r\n//                     nota=\"0.4\"\r\n//                 />\r\n//             </Card>\r\n//             <Card titulo=\"#01 - Primeiro Componente\">\r\n//                 <Primeiro></Primeiro>\r\n//             </Card>\r\n//         </div>\r\n//     </div>\r\n\r\n\r\n/**\r\n *      AULA 22 - COMPONENETE CARD #1\r\n *\r\n *  FORMA 2 - Perceba que esta mostrando a palavra conteudo e nao o valor da tag <aleatorio>\r\n *      **EXPLICAÇÃO EM Card.jsx\r\n *\r\n */\r\n\r\n// FORMA 2\r\n// export default _ =>\r\n//     <div id=\"app\">\r\n//         <h1>Fundamentos React 22</h1>\r\n//         <Card titulo=\"#04 - Desafio Aleatorio\">\r\n//             <Aleatorio min={1} max={60}/>\r\n//             <Aleatorio min={1} max={60}/>\r\n//         </Card>\r\n//         <Card titulo=\"#03 - Fragmento\">\r\n//             <Fragmento />\r\n//         </Card>\r\n//         <Card titulo=\"#02 - Com Parametro\">\r\n//             <ComParametro\r\n//                 titulo=\"Situação do Aluno\"\r\n//                 nome=\"Angelina Pierre\"\r\n//                 nota={9.3}\r\n//             />\r\n//             <ComParametro\r\n//                 titulo=\"Situação do aluno\"\r\n//                 nome=\"Santa Kaya\"\r\n//                 nota=\"0.4\"\r\n//             />\r\n//             </Card>\r\n//         <Card titulo=\"#01 - Primeiro Componente\">\r\n//             <Primeiro></Primeiro>\r\n//         </Card>\r\n//     </div>\r\n\r\n\r\n// FORMA 1\r\n// export default _ =>\r\n//     <div id =\"app\">\r\n//         <h1>Fundamentos React 22</h1>\r\n//         <Card\r\n//             titulo=\"Exemplo de card\"\r\n//         />\r\n//         <Aleatorio\r\n//             min={1}\r\n//             max={60}\r\n//         />\r\n//         <Fragmento />\r\n//         <ComParametro\r\n//             titulo=\"Situação Aluno\"\r\n//             nome=\"Angelina Pierre\"\r\n//             nota = {9.3}\r\n//         />\r\n//         <ComParametro\r\n//         titulo=\"Situação Aluno\"\r\n//         nome=\"otavio manga\"\r\n//         nota = {0.3}\r\n//     />\r\n//         <Primeiro></Primeiro>\r\n//     </div>\r\n\r\n/**\r\n *      AULA 20/21 -> DESAFIO DO NUMERO ALEATORIO\r\n *\r\n */\r\n// export default _ =>\r\n//     <div id=\"app\">\r\n//         <h1>Fundamentos React 7</h1>\r\n//         <Aleatorio\r\n//             min={1}\r\n//             max={60}\r\n//         />\r\n//         <Fragmento />\r\n//         <ComParametro\r\n//             titulo=\"Situação do Aluno\"\r\n//             nome=\"Angelina Pierre\"\r\n//             nota={9.3}\r\n//         />\r\n//         <Primeiro></Primeiro>\r\n//     </div>\r\n\r\n\r\n/**\r\n *      AULA 19 - COMPONENTE APP\r\n *\r\n * // FORMA 1\r\n * Em vez de colocar todos os nossos componentes dentro de index.js vamos criar um componente chamado app.jsx para guardar nossa aplicação.\r\n *\r\n * FORMA 2 - MAIS SIMPLIFICADA\r\n *\r\n * Quando temos o [exporte default] podemos retornar uma função anonima.\r\n *\r\n * Observe que o vscode esta mostrando que eh uma função anonima\r\n *\r\n * Se tirar o [default] não poderemos ter uma função anonima.\r\n *\r\n * FORMA 3 - ARROW FUNCTION\r\n *\r\n * Podemos substituir a palabra function por [=>] arrow function.\r\n *\r\n * FORMA 4 - Como so temos um parametro para a função podemos retirar os parenteses\r\n *\r\n * FORMA 5 - COMO NÃO VAMOS USAR O PROPS PODEMOS COLOCAR ()\r\n *\r\n * FORMA 6 - PODEMOS USAR O UNDERLINE PARA DIZER QUE TEMOS 1 PARAMETRO MAS NÃO IREMOS USA-LO.\r\n *\r\n * FORMA 7 - TIRANDO O CORPO DA FUNÇÃO\r\n *  - Não se pode fazer isso numa função normal.\r\n *\r\n * Vamos usar essa forma para as função\r\n *\r\n * Formatador ctrl+shift+f ou alt\r\n *\r\n */\r\n\r\n\r\n// FORMA 7 - FORMA MAIS REDUZIDA.\r\n// export default _ =>\r\n//     <div id=\"app\">\r\n//         <h1>Fundamentos React 7</h1>\r\n//         <Fragmento />\r\n//         <ComParametro\r\n//             titulo=\"Situação do Aluno\"\r\n//             nome=\"Angelina Pierre\"\r\n//             nota={9.3}\r\n//         />\r\n//         <Primeiro></Primeiro>\r\n//     </div>\r\n\r\n// FORMA 6\r\n// export default _ => {\r\n//     return (\r\n//         <div id=\"app\">\r\n//             <h1>Fundamentos React 6</h1>\r\n//             <Fragmento />\r\n//             <ComParametro\r\n//                 titulo = \"Situação do Aluno\"\r\n//                 nome = \"Angelina Pierre\"\r\n//                 nota = {9.3}\r\n//             />\r\n//             <Primeiro></Primeiro>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// FORMA 5 - USANDO SOMENTES ()\r\n// export default () => {\r\n//     return (\r\n//         <div id=\"app\">\r\n//             <h1>Fundamentos React 5</h1>\r\n//             <Fragmento />\r\n//             <ComParametro\r\n//                 titulo = \"Situação do Aluno\"\r\n//                 nome = \"Angelina Pierre\"\r\n//                 nota = {9.3}\r\n//             />\r\n//             <Primeiro></Primeiro>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// FORMA 4 - SEM PARENTESES\r\n// export default props => {\r\n//     return (\r\n//         <div id=\"app\">\r\n//             <h1>Fundamentos React 4</h1>\r\n//             <Fragmento />\r\n//             <ComParametro\r\n//                 titulo = \"Situação do Aluno\"\r\n//                 nome = \"Angelina Pierre\"\r\n//                 nota = {9.3}\r\n//             />\r\n//             <Primeiro></Primeiro>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// FORMA 3 - ARROW FUNCTION\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n// export default (props) => {\r\n//     return (\r\n//         <div id=\"app\">\r\n//             <h1>Fundamentos React (ARROW)</h1>\r\n//             <Fragmento />\r\n//             <ComParametro\r\n//                 titulo = \"Situação do Aluno\"\r\n//                 nome = \"Angelina Pierre\"\r\n//                 nota = {9.3}\r\n//             />\r\n//             <Primeiro></Primeiro>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// FORMA 2 -> MAIS SIMPLIFICADA\r\n// export default function(props){\r\n//     return (\r\n//         <div id=\"app\">\r\n//             <h1>Fundamentos React 2</h1>\r\n//             <Fragmento />\r\n//             <ComParametro\r\n//                 titulo = \"Situação do Aluno\"\r\n//                 nome = \"Angelina Pierre\"\r\n//                 nota = {9.3}\r\n//             />\r\n//             <Primeiro />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// FORMA 1\r\n// export default function App(props){\r\n//     return (\r\n//         <div id=\"app\">\r\n//             <h1>Fundamentos React</h1>\r\n//             <Fragmento />\r\n//             <ComParametro\r\n//                 titulo = \"Situação do Aluno\"\r\n//                 aluno = \"Angelina Pierre\"\r\n//                 nota = {9.3}\r\n//             />\r\n//             <Primeiro />\r\n//         </div>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}