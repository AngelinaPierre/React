{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\n// IMPORT REACT\nimport React from 'react';\n/**\r\n * AULA 40 - DESAFIO MEGASENA #2\r\n * \r\n * O que fizemos na aula passada foi criar uma função em javascript, aora vamos criar um componente em react para usar esse metodo.\r\n * \r\n *      function gerarNumeroNaoContido(min,max,array){\r\n    const aleatorio = parseInt(Math.random() * ((max + 1)-min)) + min\r\n    return array.includes(aleatorio) ? gerarNumeroNaoContido(min,max,array) : aleatorio\r\n}\r\n\r\nfunction gerarNumeros(qtde){\r\n    const numeros = Array(qtde)\r\n    .fill(0)\r\n    .reduce((nums)=>{\r\n        const novoNumero = gerarNumeroNaoContido(1,60,nums)\r\n        console.log([...nums, novoNumero])\r\n        return [...nums, novoNumero]\r\n    },[])\r\n    .sort((n1.n2)=> n1 - n2)\r\n    return numeros\r\n}\r\nconsole.log(gerarNumeros)\r\n\r\nconsole.log(gerarNumeroNaoContido(1,60,[0,0,0,0,0,0]))\r\n * \r\n * FORMA 1\r\n * 1) /mega/mega.jsx\r\n * 2) \r\n * \r\n */\n// FORMA 1\n\nexport default (props => {\n  function gerarNumeroNaoContido(min, max, array) {\n    const aleatorio = parseInt(Math.random() * (max + 1 - min)) + min;\n    return array.includes(aleatorio) ? gerarNumeroNaoContido(min, max, array) : aleatorio;\n  }\n\n  function gerarNumeros(qtde) {\n    const numeros = Array(qtde).fill(0).reduce(nums => {\n      const novoNumero = gerarNumeroNaoContido(1, 60, nums);\n      console.log(...nums, novoNumero);\n      return [...nums, novoNumero];\n    }, []).sort((n1, n2) => n1 - n2);\n    return numeros;\n  }\n\n  console.log(gerarNumeros); // console.log(gerarNumerosNaoContido(1,60,[0,0,0,0,0,0]))\n});","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/fundamentos-react/src/components/mega/Mega.jsx"],"names":["React","props","gerarNumeroNaoContido","min","max","array","aleatorio","parseInt","Math","random","includes","gerarNumeros","qtde","numeros","Array","fill","reduce","nums","novoNumero","console","log","sort","n1","n2"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAeC,KAAK,IAAI;AACpB,WAASC,qBAAT,CAAgCC,GAAhC,EAAoCC,GAApC,EAAwCC,KAAxC,EAA8C;AAC1C,UAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAkBL,GAAG,GAAG,CAAP,GAAWD,GAA5B,CAAD,CAAR,GAA6CA,GAA/D;AACA,WAAOE,KAAK,CAACK,QAAN,CAAeJ,SAAf,IAA4BJ,qBAAqB,CAACC,GAAD,EAAKC,GAAL,EAASC,KAAT,CAAjD,GAAmEC,SAA1E;AACH;;AACD,WAASK,YAAT,CAAsBC,IAAtB,EAA2B;AACvB,UAAMC,OAAO,GAAGC,KAAK,CAACF,IAAD,CAAL,CACfG,IADe,CACV,CADU,EAEfC,MAFe,CAEPC,IAAD,IAAQ;AACZ,YAAMC,UAAU,GAAGhB,qBAAqB,CAAC,CAAD,EAAG,EAAH,EAAMe,IAAN,CAAxC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAGH,IAAf,EAAqBC,UAArB;AACA,aAAO,CAAC,GAAGD,IAAJ,EAAUC,UAAV,CAAP;AACH,KANe,EAMd,EANc,EAOfG,IAPe,CAOV,CAACC,EAAD,EAAIC,EAAJ,KAAUD,EAAE,GAAGC,EAPL,CAAhB;AAQA,WAAOV,OAAP;AACH;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ,EAhBoB,CAiBpB;AACH,CAlBD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n// IMPORT REACT\r\nimport React from 'react'\r\n\r\n/**\r\n * AULA 40 - DESAFIO MEGASENA #2\r\n * \r\n * O que fizemos na aula passada foi criar uma função em javascript, aora vamos criar um componente em react para usar esse metodo.\r\n * \r\n *      function gerarNumeroNaoContido(min,max,array){\r\n    const aleatorio = parseInt(Math.random() * ((max + 1)-min)) + min\r\n    return array.includes(aleatorio) ? gerarNumeroNaoContido(min,max,array) : aleatorio\r\n}\r\n\r\nfunction gerarNumeros(qtde){\r\n    const numeros = Array(qtde)\r\n    .fill(0)\r\n    .reduce((nums)=>{\r\n        const novoNumero = gerarNumeroNaoContido(1,60,nums)\r\n        console.log([...nums, novoNumero])\r\n        return [...nums, novoNumero]\r\n    },[])\r\n    .sort((n1.n2)=> n1 - n2)\r\n    return numeros\r\n}\r\nconsole.log(gerarNumeros)\r\n\r\nconsole.log(gerarNumeroNaoContido(1,60,[0,0,0,0,0,0]))\r\n * \r\n * FORMA 1\r\n * 1) /mega/mega.jsx\r\n * 2) \r\n * \r\n */\r\n// FORMA 1\r\nexport default props => {\r\n    function gerarNumeroNaoContido (min,max,array){\r\n        const aleatorio = parseInt(Math.random() * ((max + 1)- min)) + min\r\n        return array.includes(aleatorio) ? gerarNumeroNaoContido(min,max,array) : aleatorio\r\n    }\r\n    function gerarNumeros(qtde){\r\n        const numeros = Array(qtde)\r\n        .fill(0)\r\n        .reduce((nums)=>{\r\n            const novoNumero = gerarNumeroNaoContido(1,60,nums)\r\n            console.log(...nums, novoNumero)\r\n            return [...nums, novoNumero]\r\n        },[])\r\n        .sort((n1,n2)=> n1 - n2)\r\n        return numeros\r\n    }\r\n    console.log(gerarNumeros)\r\n    // console.log(gerarNumerosNaoContido(1,60,[0,0,0,0,0,0]))\r\n}"]},"metadata":{},"sourceType":"module"}