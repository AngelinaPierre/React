{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PEREIRAG\\\\Documents\\\\ANGELINA\\\\REACT\\\\curso-react\\\\fundamentos-react\\\\src\\\\components\\\\basicos\\\\Aleatorio.jsx\";\n\n/* eslint-disable import/no-anonymous-default-export */\n\n/**\r\n *      AULA 20 - DESAFIO NUMERO ALEATORIO\r\n * \r\n * Criar um novo componente dentro de components/basicos, e chama-lo de [aleatorio.jsx].\r\n * \r\n * Esse componentes ira pegar um valor maximo e um valor minimo que iremos passar como parametro via propriedades, e sortear um numero entre esse maximo e minimo de forma aleatoria\r\n * \r\n * Pesquisar numero aleatorio javascript entre dois valores\r\n * \r\n * math.randon() -> pesquisar.\r\n * \r\n * FORMA 1 -> Este exemplo retorna um número entre dois valores definidos. O valor retornado será maior ou igual a min, e menor que max.\r\n * \r\n * FORMA 2 ->Este exemplo retorna um número inteiro entre dois valores definidos. O valor não poderá ser menor que min (ou do próximo inteiro maior que min, caso min não seja inteiro), e será menor (mas não igual) a max.\r\n * \r\n * FORMA 3 -> A função [getRandomInt()] acima tem intervalo com o valor mínimo incluído e o máximo excluído. Mas se você precisar que a função inclua, tanto o mínimo quanto o máximo, em seus resultados? A função [getRandomIntInclusive()] abaixo faz isso.\r\n * \r\n * \r\n * FORMA 4 - PROFESSOR\r\n * \r\n * Existe uma tecnica chamada DESTRUCTIring  que significa ler atributos dentro de um objeto (props = objeto)\r\n * \r\n * parInt = transforma o valor em inteiro\r\n * \r\n * \r\n */\n// imports\nimport React from 'react'; // FORMA 4\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  const min = props.min;\n  const max = props.max; // formula do valor aleatorio entre dois numeros inteiros\n\n  const ale = parseInt(Math.random() * (max - min)) + min;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valor Aleatorio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Valor Minimo: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \", min]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Valor Maximo: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" \", max]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Valor Escolhido: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), ale]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}); // FORMA 3\n// export default function GetRandom(min, max) {\n//     min = Math.ceil(min)\n//     max = Math.floor(max)\n//     return Math.floor(Math.random() * (max - min + 1)) + min\n// }\n// FORMA 2\n// export default function GetRandom(min, max) {\n//     min = Math.ceil(min)\n//     max = Math.floor(max)\n//     return Math.floor(Math.random() * (max - min)) + min\n// }\n// FORMA 1\n// export default function GetRandom (min, max) {\n//     return Math.random() * (max - min) + min\n// }","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/fundamentos-react/src/components/basicos/Aleatorio.jsx"],"names":["React","props","min","max","ale","parseInt","Math","random"],"mappings":";;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;;AACA,gBAAeC,KAAK,IAAI;AACpB,QAAMC,GAAG,GAAGD,KAAK,CAACC,GAAlB;AACA,QAAMC,GAAG,GAAGF,KAAK,CAACE,GAAlB,CAFoB,CAGpB;;AACA,QAAMC,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,CAAD,CAAR,GAAwCA,GAApD;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACsCA,GADtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,OACqCC,GADrC;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EACuCC,GADvC;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnBD,E,CAsBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n/**\r\n *      AULA 20 - DESAFIO NUMERO ALEATORIO\r\n * \r\n * Criar um novo componente dentro de components/basicos, e chama-lo de [aleatorio.jsx].\r\n * \r\n * Esse componentes ira pegar um valor maximo e um valor minimo que iremos passar como parametro via propriedades, e sortear um numero entre esse maximo e minimo de forma aleatoria\r\n * \r\n * Pesquisar numero aleatorio javascript entre dois valores\r\n * \r\n * math.randon() -> pesquisar.\r\n * \r\n * FORMA 1 -> Este exemplo retorna um número entre dois valores definidos. O valor retornado será maior ou igual a min, e menor que max.\r\n * \r\n * FORMA 2 ->Este exemplo retorna um número inteiro entre dois valores definidos. O valor não poderá ser menor que min (ou do próximo inteiro maior que min, caso min não seja inteiro), e será menor (mas não igual) a max.\r\n * \r\n * FORMA 3 -> A função [getRandomInt()] acima tem intervalo com o valor mínimo incluído e o máximo excluído. Mas se você precisar que a função inclua, tanto o mínimo quanto o máximo, em seus resultados? A função [getRandomIntInclusive()] abaixo faz isso.\r\n * \r\n * \r\n * FORMA 4 - PROFESSOR\r\n * \r\n * Existe uma tecnica chamada DESTRUCTIring  que significa ler atributos dentro de um objeto (props = objeto)\r\n * \r\n * parInt = transforma o valor em inteiro\r\n * \r\n * \r\n */\r\n\r\n// imports\r\nimport React from 'react'\r\n\r\n\r\n// FORMA 4\r\nexport default props => {\r\n    const min = props.min\r\n    const max = props.max\r\n    // formula do valor aleatorio entre dois numeros inteiros\r\n    const ale = parseInt(Math.random() * (max - min)) + min\r\n    return (\r\n        <div>\r\n            <h2>Valor Aleatorio</h2>\r\n            <p>\r\n                <strong> Valor Minimo: </strong> {min}\r\n            </p>\r\n            <p>\r\n                <strong>Valor Maximo: </strong> {max}\r\n            </p>\r\n            <p>\r\n                <strong>Valor Escolhido: </strong>{ale}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// FORMA 3\r\n// export default function GetRandom(min, max) {\r\n//     min = Math.ceil(min)\r\n//     max = Math.floor(max)\r\n//     return Math.floor(Math.random() * (max - min + 1)) + min\r\n// }\r\n\r\n// FORMA 2\r\n// export default function GetRandom(min, max) {\r\n//     min = Math.ceil(min)\r\n//     max = Math.floor(max)\r\n//     return Math.floor(Math.random() * (max - min)) + min\r\n// }\r\n\r\n// FORMA 1\r\n// export default function GetRandom (min, max) {\r\n//     return Math.random() * (max - min) + min\r\n// }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}