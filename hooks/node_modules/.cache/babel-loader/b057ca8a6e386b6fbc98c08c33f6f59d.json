{"ast":null,"code":"export function numberReducer(state, action) {\n  switch (action.type) {\n    // toda action possui um tipo\n    case 'num_add2':\n      // tipo da action(objeto)\n      return { ...state,\n        number: state.number + 2\n      };\n\n    case 'num_mult7':\n      return { ...state,\n        number: state.number * 7\n      };\n\n    case 'num_div25':\n      return { ...state,\n        number: state.number / 25\n      };\n\n    case 'numInt':\n      return { ...state,\n        number: parseInt(state.number)\n      };\n\n    case 'num_addN':\n      return { ...state,\n        number: state.number + action.payload\n      };\n\n    default:\n      return state;\n    // default é o retorno do estado atual. alterado para resetar(initialState)\n  }\n}","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/hooks/src/store/reducers/number.js"],"names":["numberReducer","state","action","type","number","parseInt","payload"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACzC,UAAQA,MAAM,CAACC,IAAf;AAAuB;AACnB,SAAK,UAAL;AAAiB;AACb,aAAQ,EAAE,GAAGF,KAAL;AAAYG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe;AAAnC,OAAR;;AACJ,SAAK,WAAL;AACI,aAAQ,EAAC,GAAGH,KAAJ;AAAUG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe;AAAjC,OAAR;;AACJ,SAAK,WAAL;AACI,aAAQ,EAAC,GAAGH,KAAJ;AAAUG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe;AAAjC,OAAR;;AACJ,SAAK,QAAL;AACI,aAAQ,EAAC,GAAGH,KAAJ;AAAUG,QAAAA,MAAM,EAAEC,QAAQ,CAACJ,KAAK,CAACG,MAAP;AAA1B,OAAR;;AACJ,SAAK,UAAL;AACI,aAAQ,EAAC,GAAGH,KAAJ;AAAUG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAeF,MAAM,CAACI;AAAxC,OAAR;;AACJ;AACI,aAAOL,KAAP;AAAa;AAZrB;AAcH","sourcesContent":["export function numberReducer(state, action) {\r\n    switch (action.type) { // toda action possui um tipo\r\n        case 'num_add2': // tipo da action(objeto)\r\n            return ({ ...state, number: state.number + 2 })\r\n        case 'num_mult7':\r\n            return ({...state,number: state.number * 7})\r\n        case 'num_div25':\r\n            return ({...state,number: state.number / 25})\r\n        case 'numInt':\r\n            return ({...state,number: parseInt(state.number)})\r\n        case 'num_addN':\r\n            return ({...state,number: state.number + action.payload})\r\n        default:\r\n            return state // default é o retorno do estado atual. alterado para resetar(initialState)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}