{"ast":null,"code":"import { numberReducer } from \"./number\";\nexport default function reducer(state, action) {\n  let newState = numberReducer(state, action);\n\n  switch (action.type) {\n    // toda action possui um tipo\n    case 'num_add2':\n      // tipo da action(objeto)\n      return { ...state,\n        number: state.number + 2\n      };\n\n    case 'login':\n      return { ...state,\n        user: {\n          name: action.payload\n        }\n      };\n\n    case 'num_mult7':\n      return { ...state,\n        number: state.number * 7\n      };\n\n    case 'num_div25':\n      return { ...state,\n        number: state.number / 25\n      };\n\n    case 'numInt':\n      return { ...state,\n        number: parseInt(state.number)\n      };\n\n    case 'num_addN':\n      return { ...state,\n        number: state.number + action.payload\n      };\n\n    default:\n      return state;\n    // default é o retorno do estado atual. alterado para resetar(initialState)\n  }\n}","map":{"version":3,"sources":["C:/Users/PEREIRAG/Documents/ANGELINA/REACT/curso-react/hooks/src/store/reducers/index.js"],"names":["numberReducer","reducer","state","action","newState","type","number","user","name","payload","parseInt"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAuBC,MAAvB,EAA8B;AACzC,MAAIC,QAAQ,GAAGJ,aAAa,CAACE,KAAD,EAAOC,MAAP,CAA5B;;AAEA,UAAOA,MAAM,CAACE,IAAd;AAAqB;AACjB,SAAK,UAAL;AAAiB;AACb,aAAQ,EAAC,GAAGH,KAAJ;AAAUI,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,GAAe;AAAjC,OAAR;;AACJ,SAAK,OAAL;AACI,aAAQ,EAAC,GAAGJ,KAAJ;AAAUK,QAAAA,IAAI,EAAE;AAACC,UAAAA,IAAI,EAAEL,MAAM,CAACM;AAAd;AAAhB,OAAR;;AACJ,SAAK,WAAL;AACI,aAAQ,EAAC,GAAGP,KAAJ;AAAUI,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,GAAe;AAAjC,OAAR;;AACA,SAAK,WAAL;AACI,aAAQ,EAAC,GAAGJ,KAAJ;AAAUI,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,GAAe;AAAjC,OAAR;;AACJ,SAAK,QAAL;AACI,aAAQ,EAAC,GAAGJ,KAAJ;AAAUI,QAAAA,MAAM,EAAEI,QAAQ,CAACR,KAAK,CAACI,MAAP;AAA1B,OAAR;;AACJ,SAAK,UAAL;AACI,aAAQ,EAAC,GAAGJ,KAAJ;AAAUI,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,GAAeH,MAAM,CAACM;AAAxC,OAAR;;AACR;AACI,aAAOP,KAAP;AAAa;AAdrB;AAgBH","sourcesContent":["import { numberReducer } from \"./number\"\r\nexport default function reducer(state,action){\r\n    let newState = numberReducer(state,action)\r\n    \r\n    switch(action.type){ // toda action possui um tipo\r\n        case 'num_add2': // tipo da action(objeto)\r\n            return ({...state,number: state.number + 2})\r\n        case 'login':\r\n            return ({...state,user: {name: action.payload} })\r\n        case 'num_mult7':\r\n            return ({...state,number: state.number * 7})\r\n            case 'num_div25':\r\n                return ({...state,number: state.number / 25})\r\n            case 'numInt':\r\n                return ({...state,number: parseInt(state.number)})\r\n            case 'num_addN':\r\n                return ({...state,number: state.number + action.payload})\r\n        default:\r\n            return state // default é o retorno do estado atual. alterado para resetar(initialState)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}